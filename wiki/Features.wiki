#summary Current feature set of the framework.

This list encompasses the feature set for the current version of the Accord.NET Framework. You may also want to check the [http://www.aforgenet.com/framework/features/ feature list for AForge.NET].

 === Accord.Math ===

 * [http://crsouza.blogspot.com/2010/08/matrix-manipulation-using-accordnet.html MATLAB-like matrix manipulation of multidimensional-arrays]
 * Matrix parsing and formatting (compatible with Octave, MATLAB and C# formats)
 * Limited-memory Broyden–Fletcher–Goldfarb–Shanno (BFGS) method for non-linear optimization
 * Conjugate-Gradient (CG) method for non-linear optimization
 * Goldfarb-Idnani for constrained Quadratic Programming (QP) solving
 * Special scientific functions (gamma, gammal, erf, bessel, ...)
 * Wavelet Transforms
   * Haar, CDF97
 * Numeric matrix decompositions for float (32-bit), double (64-bit) and decimal (128-bit) data-types

<table border="0" width="600px">
<tbody align="left">
<tr>
<th>Decompositions</th>
<th>Multidimensional</th>
<th>Jagged</th>
</tr>
<tr>
<td>
Cholesky
</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_CholeskyDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_CholeskyDecompositionF.htm">float</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_CholeskyDecompositionD.htm">decimal</a>)</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_JaggedCholeskyDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_JaggedCholeskyDecompositionF.htm">float</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_JaggedCholeskyDecompositionD.htm">decimal</a>)</td>
</tr>
<tr>
<td>Eigenvalue (EVD)</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_EigenvalueDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_EigenvalueDecompositionF.htm">float</a>)</td>
<td></td>
</tr>
<tr>
<td>Generalized Eigenvalue [<a href="http://crsouza.blogspot.com.br/2010/06/generalized-eigenvalue-decomposition-in.html">1</a>]</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_GeneralizedEigenvalueDecomposition.htm">double</a>)</td>
<td></td>
</tr>
<tr>
<td>Nonnegative Factorization</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_NonnegativeMatrixFactorization.htm">double</a>)</td>
<td></td>
</tr>
<tr>
<td>LU</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_LuDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_LuDecompositionF.htm">float</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_LuDecompositionD.htm">decimal</a>)</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_JaggedLuDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_LuDecompositionF.htm">float</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_JaggedLuDecompositionD.htm">decimal</a>)</td>
</tr>
<tr>
<td>QR</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_QrDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_QrDecompositionF.htm">float</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_QrDecompositionD.htm">decimal</a>)</td>
<td></td>
</tr>
<tr>
<td>Singular value (SVD)</td>
<td>(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_SingularValueDecomposition.htm">double</a>)(<a href="http://accord.googlecode.com/svn/docs/html/T_Accord_Math_Decompositions_SingularValueDecompositionF.htm">float</a>)</td>
<td></td>
</tr>
</tbody>
</table>
_`*` Further type variants may be implemented under request_


 === Accord.Statistics ===
 * Simple Descriptive Analysis
 * Independent Component Analysis (ICA)
 * [http://crsouza.blogspot.com/2010/01/linear-discriminant-analysis-in-c.html Linear Discriminant Analysis (LDA)]
 * [http://crsouza.blogspot.com/2010/01/kernel-discriminant-analysis-in-c.html Kernel Discriminant Analysis (KDA)]
 * [http://crsouza.blogspot.com/2009/09/principal-component-analysis-in-c.html Principal Component Analysis (PCA)]
 * [http://crsouza.blogspot.com/2010/01/kernel-principal-component-analysis-in.html Kernel Principal Component Analysis (KPCA)]
 * [http://crsouza.blogspot.com/2010/04/partial-least-squares-analysis-and.html Partial Least Squares Analysis (PLS)]
 * [http://crsouza.blogspot.com/2010/02/logistic-regression-in-c.html Logistic Regression Fitting and Analysis]
 * Stepwise Logistic Regression Analysis
 * Multivariate, Multiple and Simple Linear Regressions
 * [http://crsouza.blogspot.com/2010/01/performing-discriminant-power-analysis.html Receiver Operating Curves (ROC)]
 * Hypothesis Testing (Chi-Square, Wald, Z)
 * [http://crsouza.blogspot.com/2010/03/hidden-markov-models-in-c.html Discrete Hidden Markov Models (HMM)] and [http://crsouza.blogspot.com/2010/03/hidden-markov-sequence-classifiers-in-c.html Sequence Classifiers]
 * Continuous density Hidden Markov Models and Continuous-density Sequence Classifiers
 * Threshold models for rejection in hidden Markov model sequence classifiers
 * Linear-chain Conditional Random Fields (CRFs)
 * Linear-chain Hidden Conditional Random Fields (HCRFs)
 * [http://crsouza.blogspot.com/2010/03/kernel-functions-for-machine-learning.html Wide variety of Kernels for machine learning applications] (including sparse)
 * Probability distributions (univariate and multivariate)
   * Univariate Normal (Gaussian), Bernoulli, Chi-Square, Categorical, Poisson, Von-Mises, Univariate Mixture, InverseGaussian, Nakagami, Rayleigh and Weibull distributions
   * Multivariate Normal (Gaussian), Multinomial, Multivariate Mixture, Joint and Independent distributions
   * Moving/running Circular and Normal statistics
 * Filters for tabular data processing
   * Projection, Selection, Codification, Discretization, Normalization, Equalization and Linear Scaling.

 === Accord.Neuro ===
 * [http://crsouza.blogspot.com/2009/11/neural-network-learning-by-levenberg_18.html Levenberg-Marquardt (with Bayesian Regularization) Learning Algorithm]
 * Parallel Resilient Backpropagation (RProp)
 * Nguyen-Widrow weight initialization

 === Accord.MachineLearning ===
 *  [http://crsouza.blogspot.com/2010/10/k-means-clustering.html K-Means Clustering]
 * K-Modes Clustering (for discrete or generic data)
 * [http://crsouza.blogspot.com/2010/10/gaussian-mixture-models-and-expectation.html Gaussian Mixture Models (GMM)]
 * Support Vector Machines (SVM)
 * [http://crsouza.blogspot.com/2010/04/kernel-support-vector-machines-for.html Kernel Support Vector Machines (kSVM)]
 * [http://www.codeproject.com/KB/recipes/handwriting-svm.aspx Multi-class Kernel Support Vector Machines]
 * Large-Margin Decision Directed Graphs (DDAGs)
 * Sequential Minimal Optimization Learning (SMO)
 * Sequential Minimal Optimization for Regression (SMOR)
 * [http://crsouza.blogspot.com/2010/06/random-sample-consensus-ransac-in-c.html Multipurpose RANSAC for robust model estimation]
 * Multipurpose k-fold cross-validation algorithm
 * Generic Grid-Search algorithm for parameter tuning
 * Naïve Bayes for discrete and arbitrary distributions
 * Decision Trees (ID3, C4.5) with on-the-fly code generation

 === Accord.Imaging ===
 * [http://crsouza.blogspot.com/2010/05/harris-corners-detector-in-c.html Harris Corner Detector for AForge.NET]
 * Features from Accelerated Segment Test (FAST) corners detector
 * Speeded-Up Robust Features (SURF) detector and descriptor
 * [http://www.codeproject.com/KB/recipes/automatic_panoramas.aspx Robust Homography estimation using RANSAC]
 * Raw and Central Image Moments Calculation
 * Border Following contour extraction
 * K-Curvature algorithm for contour peak detection
 * Blob convex hull defects extraction
 * Image processing filters
   * [http://www.codeproject.com/KB/recipes/automatic_panoramas.aspx Image blending]
   * Concatenation
   * Markers (points, pairs, rectangles, features)
   * Wavelet Transform
   * Projective transform (rectification)

 === Accord.Vision ===
 * Viola-Jones (Haar) Object Detector (multi-threaded)
 * Object Trackers
   * Camshift Object Tracker
   * HSL Color Range Tracker
   * Template Matching Tracker
 * [http://crsouza.blogspot.com/2011/07/accordnet-framework-gesture-controller.html Controller Components for head and face gestures]

 === Accord.Audio ===
 * Signal windows (Hann, Blackman, Hamming)
 * Fourier and Hilbert transforms
 * Filters for signal processing
 * Audio depth conversion

 === Accord.Audition ===
 * Energy-based beat detection