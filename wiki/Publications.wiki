#summary One-sentence summary of this page.

This page lists works published featuring specifics of the Accord.NET Framework. For a list of works referencing the framework, please see the [Showcase] page of the wiki.

= Online articles =

 * [http://www.codeproject.com/Articles/441226/Haar-feature-Object-Detection-in-Csharp Haar-feature Object Detection in C#] - A description of how it was possible to achieve real-time face detection with some clever ideas back in 2001.

 * [http://www.codeproject.com/Articles/74348/Handwriting-Recognition-using-Kernel-Discriminant Handwriting Recognition using Kernel Discriminant Analysis] - Demonstration of handwritten digit recognition using Kernel Discriminant Analysis and the optical recognition of handwritten digits data set from the UCI Machine Learning Repository.

 * [http://www.codeproject.com/Articles/106583/Handwriting-Recognition-Revisited-Kernel-Support-V Handwriting Recognition Revisited: Kernel Support Vector Machines] - In a previous article, we discussed how to perform the recognition of handwritten digits using Kernel Discriminant Analysis. In this article, we will discuss some techniques to do it using Kernel Support Vector Machines.

 * [http://www.codeproject.com/Articles/95453/Automatic-Image-Stitching-with-Accord-NET Automatic Image Stitching with Accord.NET] - Demonstration of automatic image stitching by interest point matching using the Accord and AForge.NET Frameworks

 * [http://crsouza.blogspot.com.br/2012/01/decision-trees-in-c.html Decision Trees in C#] - Implementing and using Decision Trees in C#.

 * [http://crsouza.blogspot.com.br/2010/10/gaussian-mixture-models-and-expectation.html Gaussian Mixture Models and Expectation-Maximization] - Gaussian Mixture Models (GMM) can be seen as a type of unsupervised learning or clustering methods. They are among the most statistically mature methods for clustering. But unlike K-Means, GMMs are able to build soft clustering boundaries, i.e., points in space can belong to any class with a given probability.

 * [http://crsouza.blogspot.com.br/2010/01/kernel-principal-component-analysis-in.html Kernel Principal Component Analysis in C#] - KPCA is an extension of principal component analysis (PCA) using techniques of kernel methods. Using a kernel, the originally linear operations of PCA are done in a reproducing kernel Hilbert space with a non-linear mapping. This article details the method and its implementation in the Accord.NET Framework.

= Technical reports =

 * Souza, C.R., "[http://www2.dc.ufscar.br/~cesar.souza/publications/pca-tutorial.pdf A Tutorial on Principal Component Analysis with the Accord.NET Framework]". Department of Computing, Federal University of Sao Carlos, Technical Report, 2012:
  A technical report and a complete tutorial on Principal Component Analysis, a common and popular dimensionality reduction technique found in many real-world solutions. This report aims not only to explain PCA in the same molds as given by Lindsay I Smith, but to present many of the features of the Accord.NET Framework which can help performing this analysis.