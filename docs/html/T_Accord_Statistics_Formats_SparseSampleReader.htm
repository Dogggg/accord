<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../Styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../Styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../Scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>SparseSampleReader Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="SparseSampleReader class" />
    <meta name="System.Keywords" content="Accord.Statistics.Formats.SparseSampleReader class" />
    <meta name="System.Keywords" content="SparseSampleReader class, about SparseSampleReader class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Formats.SparseSampleReader" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Formats.SparseSampleReader" />
    <meta name="Description" content="Reader for data files containing samples in libsvm's sparse format." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.Statistics.Formats" />
    <meta name="file" content="T_Accord_Statistics_Formats_SparseSampleReader" />
    <meta name="guid" content="T_Accord_Statistics_Formats_SparseSampleReader" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <div class="OH_topic">
          <div class="OH_title">
            <table>
              <tr>
                <td class="OH_tdTitleColumn">SparseSampleReader Class</td>
                <td class="OH_tdLogoColumn">
                  <img align="right" src="./../icons/Accord.NET.png" />
                </td>
              </tr>
            </table>
          </div>
        </div>
        <div class="OH_feedbacklink">
          <a href="mailto:?subject=Accord.NET+Framework+SparseSampleReader+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a>
        </div>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               Reader for data files containing samples in libsvm's sparse format.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBENAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBENAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.Statistics.Formats<span id="ID0EBBNAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBNAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SparseSampleReader</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_Statistics_Formats.htm" target="">Accord.Statistics.Formats</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Statistics</span> (in Accord.Statistics.dll) Version: 2.8.0.0 (2.8.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAADAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAADAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAADAAAAA_tabimgleft"></div><div id="ID0EAADAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAADAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAADAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAADAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAADAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAADAAAAA_tabimgright"></div></div><div id="ID0EAADAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAADAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EAADAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAADAAAAA_copycode" href="javascript:CopyToClipboard('ID0EAADAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAADAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EAADAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAADAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SparseSampleReader</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></pre></div><div id="ID0EAADAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public class SparseSampleReader : IDisposable</pre></div><div id="ID0EAADAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAADAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               The following example shows how to read all sparse samples from a file
               and retrieve them as a dense multimensional vector.</p><div id="ID0ECCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ECCAAAAA_tabs"></div><div id="ID0ECCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECCAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0ECCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ECCAAAAA_copycode" href="javascript:CopyToClipboard('ID0ECCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECCAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0ECCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ECCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Suppose we are going to read a sparse sample file containing</span> 
<span class="highlight-comment">//  samples which have an actual dimension of 4. Since the samples</span> 
<span class="highlight-comment">//  are in a sparse format, each entry in the file will probably</span> 
<span class="highlight-comment">//  have a much lesser number of elements.</span> 
<span class="highlight-keyword">int</span> sampleSize = <span class="highlight-number">4</span>;

<span class="highlight-comment">// Create a new Sparse Sample Reader to read any given file,</span> 
<span class="highlight-comment">//  passing the correct dense sample size in the constructor</span>
SparseSampleReader reader = <span class="highlight-keyword">new</span> SparseSampleReader(file, Encoding.Default, sampleSize);

<span class="highlight-comment">// Declare a vector to obtain the label</span> 
<span class="highlight-comment">//  of each of the samples in the file</span> 
<span class="highlight-keyword">int</span>[] labels = <span class="highlight-keyword">null</span>;

<span class="highlight-comment">// Declare a vector to obtain the description (or comments)</span> 
<span class="highlight-comment">//  about each of the samples in the file, if present.</span> 
<span class="highlight-keyword">string</span>[] descriptions = <span class="highlight-keyword">null</span>;

<span class="highlight-comment">// Read the sparse samples and store them in a dense vector array</span> 
<span class="highlight-keyword">double</span>[][] samples = reader.ReadToEnd(<span class="highlight-keyword">out</span> labels, <span class="highlight-keyword">out</span> descriptions);</pre></div><div id="ID0ECCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Suppose we are going to read a sparse sample file containing 
//  samples which have an actual dimension of 4. Since the samples 
//  are in a sparse format, each entry in the file will probably 
//  have a much lesser number of elements. 
int sampleSize = 4;

// Create a new Sparse Sample Reader to read any given file, 
//  passing the correct dense sample size in the constructor
SparseSampleReader reader = new SparseSampleReader(file, Encoding.Default, sampleSize);

// Declare a vector to obtain the label 
//  of each of the samples in the file 
int[] labels = null;

// Declare a vector to obtain the description (or comments) 
//  about each of the samples in the file, if present. 
string[] descriptions = null;

// Read the sparse samples and store them in a dense vector array 
double[][] samples = reader.ReadToEnd(out labels, out descriptions);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECCAAAAA');</script><p>Additionally, it is also possible to read each sample
               individually and sequencially. For this, we can use a while
               loop until we reach the end of the stream.</p><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Suppose we are going to read a sparse sample file containing</span> 
<span class="highlight-comment">//  samples which have an actual dimension of 4. Since the samples</span> 
<span class="highlight-comment">//  are in a sparse format, each entry in the file will probably</span> 
<span class="highlight-comment">//  have a much lesser number of elements.</span> 
<span class="highlight-keyword">int</span> sampleSize = <span class="highlight-number">4</span>;

<span class="highlight-comment">// Create a new Sparse Sample Reader to read any given file,</span> 
<span class="highlight-comment">//  passing the correct dense sample size in the constructor</span>
SparseSampleReader reader = <span class="highlight-keyword">new</span> SparseSampleReader(file, Encoding.Default, sampleSize);

<span class="highlight-comment">// Declare some variables to receive each current sample</span> 
<span class="highlight-keyword">int</span> label = <span class="highlight-number">0</span>;
<span class="highlight-keyword">string</span> description;
<span class="highlight-keyword">double</span>[] sample;

<span class="highlight-comment">// Read a single sample from the file</span>
sample = reader.ReadDense(<span class="highlight-keyword">out</span> label, <span class="highlight-keyword">out</span> description);

<span class="highlight-comment">// Read all other samples from the file</span> 
<span class="highlight-keyword">while</span> (!reader.EndOfStream)
{
    sample = reader.ReadDense(<span class="highlight-keyword">out</span> label, <span class="highlight-keyword">out</span> description);
}</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Suppose we are going to read a sparse sample file containing 
//  samples which have an actual dimension of 4. Since the samples 
//  are in a sparse format, each entry in the file will probably 
//  have a much lesser number of elements. 
int sampleSize = 4;

// Create a new Sparse Sample Reader to read any given file, 
//  passing the correct dense sample size in the constructor
SparseSampleReader reader = new SparseSampleReader(file, Encoding.Default, sampleSize);

// Declare some variables to receive each current sample 
int label = 0;
string description;
double[] sample;

// Read a single sample from the file
sample = reader.ReadDense(out label, out description);

// Read all other samples from the file 
while (!reader.EndOfStream)
{
    sample = reader.ReadDense(out label, out description);
}</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Statistics_Formats_SparseSampleReader.htm" target="">SparseSampleReader Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Formats.htm" target="">Accord.Statistics.Formats Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2012. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+SparseSampleReader+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>