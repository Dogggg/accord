<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>KDTree(T) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="KDTree%3CT%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Structures.KDTree%3CT%3E class" />
    <meta name="System.Keywords" content="KDTree%3CT%3E class, about KDTree%3CT%3E class" />
    <meta name="System.Keywords" content="KDTree(Of T) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Structures.KDTree(Of T) class" />
    <meta name="System.Keywords" content="KDTree(Of T) class, about KDTree(Of T) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.Structures.KDTree`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.Structures.KDTree`1" />
    <meta name="Description" content="K-dimensional tree." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning.Structures" />
    <meta name="file" content="T_Accord_MachineLearning_Structures_KDTree_1" />
    <meta name="guid" content="T_Accord_MachineLearning_Structures_KDTree_1" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">KDTree<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
              K-dimensional tree.
            </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning.Structures<span id="ID0EEBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>KDTree<span id="ID0ECBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBOAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EABOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABOAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></span><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning_Structures.htm" target="">Accord.MachineLearning.Structures</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.9.0.0 (2.9.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EABEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EABEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EABEAAAAA_tabimgleft"></div><div id="ID0EABEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EABEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EABEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EABEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EABEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EABEAAAAA_tabimgright"></div></div><div id="ID0EABEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EABEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EABEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EABEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EABEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EABEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EABEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EABEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">KDTree</span>&lt;T&gt; : <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a>&lt;<a href="T_Accord_MachineLearning_Structures_KDTreeNode_1.htm">KDTreeNode</a>&lt;T&gt;&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_blank">IEnumerable</a></pre></div><div id="ID0EABEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class KDTree&lt;T&gt; : IEnumerable&lt;KDTreeNode&lt;T&gt;&gt;, 
	IEnumerable</pre></div><div id="ID0EABEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EABEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">T</span></dt><dd>The type of the value being stored.</dd></dl><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              A k-d tree (short for k-dimensional tree) is a space-partitioning data structure 
              for organizing points in a k-dimensional space. k-d trees are a useful data structure
              for several applications, such as searches involving a multidimensional search key 
              (e.g. range searches and nearest neighbor searches). k-d trees are a special case 
              of binary space partitioning trees.</p><p>
              The k-d tree is a binary tree in which every node is a k-dimensional point. Every non-
              leaf node can be thought of as implicitly generating a splitting hyperplane that divides
              the space into two parts, known as half-spaces. Points to the left of this hyperplane 
              represent the left subtree of that node and points right of the hyperplane are represented
              by the right subtree. The hyperplane direction is chosen in the following way: every node 
              in the tree is associated with one of the k-dimensions, with the hyperplane perpendicular 
              to that dimension's axis. So, for example, if for a particular split the "x" axis is chosen,
              all points in the subtree with a smaller "x" value than the node will appear in the left 
              subtree and all points with larger "x" value will be in the right subtree. In such a case, 
              the hyperplane would be set by the x-value of the point, and its normal would be the unit 
              x-axis.</p><p>
              References:
              <ul><li>
                  Wikipedia, The Free Encyclopedia. K-d tree. Available on:
                  http://en.wikipedia.org/wiki/K-d_tree </li><li>
                  Moore, Andrew W. "An intoductory tutorial on kd-trees." (1991).
                  Available at: http://www.autonlab.org/autonweb/14665/version/2/part/5/data/moore-tutorial.pdf </li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// This is the same example found in Wikipedia page on</span> 
<span class="highlight-comment">// k-d trees: http://en.wikipedia.org/wiki/K-d_tree</span> 

<span class="highlight-comment">// Suppose we have the following set of points:</span> 

<span class="highlight-keyword">double</span>[][] points =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">3</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">5</span>, <span class="highlight-number">4</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">9</span>, <span class="highlight-number">6</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">7</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">8</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">2</span> },
};


<span class="highlight-comment">// To create a tree from a set of points, we use</span>
KDTree&lt;<span class="highlight-keyword">int</span>&gt; tree = KDTree.FromData&lt;<span class="highlight-keyword">int</span>&gt;(points);

<span class="highlight-comment">// Now we can manually navigate the tree</span>
KDTreeNode&lt;<span class="highlight-keyword">int</span>&gt; node = tree.Root.Left.Right;

<span class="highlight-comment">// Or traverse it automatically</span> 
<span class="highlight-keyword">foreach</span> (KDTreeNode&lt;<span class="highlight-keyword">int</span>&gt; n <span class="highlight-keyword">in</span> tree)
{
    <span class="highlight-keyword">double</span>[] location = n.Position;
    Assert.AreEqual(<span class="highlight-number">2</span>, location.Length);
}

<span class="highlight-comment">// Given a query point, we can also query for other</span> 
<span class="highlight-comment">// points which are near this point within a radius</span> 

<span class="highlight-keyword">double</span>[] query = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">5</span>, <span class="highlight-number">3</span> };

<span class="highlight-comment">// Locate all nearby points within an euclidean distance of 1.5</span> 
<span class="highlight-comment">// (answer should be be a single point located at position (5,4))</span>
KDTreeNodeCollection&lt;<span class="highlight-keyword">int</span>&gt; result = tree.Nearest(query, radius: <span class="highlight-number">1.5</span>); 

<span class="highlight-comment">// We can also use alternate distance functions</span>
tree.Distance = Accord.Math.Distance.Manhattan;

<span class="highlight-comment">// And also query for a fixed number of neighbor points</span> 
<span class="highlight-comment">// (answer should be the points at (5,4), (7,2), (2,3))</span>
KDTreeNodeCollection&lt;<span class="highlight-keyword">int</span>&gt; neighbors = tree.Nearest(query, neighbors: <span class="highlight-number">3</span>);</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// This is the same example found in Wikipedia page on 
// k-d trees: http://en.wikipedia.org/wiki/K-d_tree 

// Suppose we have the following set of points: 

double[][] points =
{
    new double[] { 2, 3 },
    new double[] { 5, 4 },
    new double[] { 9, 6 },
    new double[] { 4, 7 },
    new double[] { 8, 1 },
    new double[] { 7, 2 },
};


// To create a tree from a set of points, we use
KDTree&lt;int&gt; tree = KDTree.FromData&lt;int&gt;(points);

// Now we can manually navigate the tree
KDTreeNode&lt;int&gt; node = tree.Root.Left.Right;

// Or traverse it automatically 
foreach (KDTreeNode&lt;int&gt; n in tree)
{
    double[] location = n.Position;
    Assert.AreEqual(2, location.Length);
}

// Given a query point, we can also query for other 
// points which are near this point within a radius 

double[] query = new double[] { 5, 3 };

// Locate all nearby points within an euclidean distance of 1.5 
// (answer should be be a single point located at position (5,4))
KDTreeNodeCollection&lt;int&gt; result = tree.Nearest(query, radius: 1.5); 

// We can also use alternate distance functions
tree.Distance = Accord.Math.Distance.Manhattan;

// And also query for a fixed number of neighbor points 
// (answer should be the points at (5,4), (7,2), (2,3))
KDTreeNodeCollection&lt;int&gt; neighbors = tree.Nearest(query, neighbors: 3);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_Structures_KDTree_1.htm" target="">KDTree<span id="ID0EDACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDACAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EBACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBACAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_Structures.htm" target="">Accord.MachineLearning.Structures Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_KNearestNeighbors.htm" target="">Accord.MachineLearning<span id="ID0EBAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAAAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>KNearestNeighbors</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+KDTree(T)+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>