<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Matrix Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="Matrix class" />
    <meta name="System.Keywords" content="Accord.Math.Matrix class" />
    <meta name="System.Keywords" content="Matrix class, about Matrix class" />
    <meta name="Microsoft.Help.F1" content="Accord.Math.Matrix" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Math.Matrix" />
    <meta name="Description" content="Static class Matrix. Defines a set of extension methods that operates mainly on multidimensional arrays and vectors." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.Math" />
    <meta name="file" content="T_Accord_Math_Matrix" />
    <meta name="guid" content="T_Accord_Math_Matrix" />
    
    <link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">Matrix Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord-net.github.io/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               Static class Matrix. Defines a set of extension methods
               that operates mainly on multidimensional arrays and vectors.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.Math<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Matrix</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_Math.htm" target="">Accord.Math</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Math</span> (in Accord.Math.dll) Version: 2.10.0.0 (2.10.0.4632)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Matrix</span></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public static class Matrix</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div>
               The matrix class is a static class containing several extension methods.
               To use this class, import the <a href="N_Accord_Math.htm" target="">Accord.Math</a> and use the
               standard .NET's matrices and jagged arrays. When you call the dot (.)
               operator on those classes, the extension methods offered by this class
               should become available through IntelliSense auto-complete.
             <div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><h2>Introduction</h2><p>
                 Declaring and using matrices in the Accord.NET Framework does
                 not requires much. In fact, it does not require anything else
                 that is not already present at the .NET Framework. If you have
                 already existing and working code using other libraries, you
                 don't have to convert your matrices to any special format used
                 by Accord.NET. This is because Accord.NET is built to interoperate
                 with other libraries and existing solutions, relying solely on
                 default .NET structures to work.</p><p>
                 To begin, please add the following <span class="code">using</span> directive on
                 top of your .cs (or equivalent) source code file: </p><div id="ID0EVCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EVCAAAAA_tabs"></div><div id="ID0EVCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EVCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EVCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EVCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EVCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EVCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EVCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EVCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">using</span> Accord.Math;</pre></div><div id="ID0EVCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>using Accord.Math;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EVCAAAAA');</script><p>
                 This is all you need to start using the Accord.NET matrix library.</p><h2>Creating matrices</h2><p>
                 Let's start by declaring a matrix, or otherwise specifying matrices
                 from other sources. The most straighforward way to declare a matrix
                 in Accord.NET is simply using: </p><div id="ID0ERCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ERCAAAAA_tabs"></div><div id="ID0ERCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ERCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ERCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ERCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ERCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ERCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ERCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ERCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre> <span class="highlight-keyword">double</span>[,] matrix = 
 {
    { <span class="highlight-number">1</span>, <span class="highlight-number">2</span> },
    { <span class="highlight-number">3</span>, <span class="highlight-number">4</span> },
    { <span class="highlight-number">5</span>, <span class="highlight-number">6</span> },
};</pre></div><div id="ID0ERCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre> double[,] matrix = 
 {
    { 1, 2 },
    { 3, 4 },
    { 5, 6 },
};</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ERCAAAAA');</script><p>
                Yep, that is right. You don't need to create any fancy custom Matrix
                classes or vectors to make Accord.NET work, which is a plus if you
                have already existent code using other libraries. You are also free
                to use both the multidimensional matrix syntax above or the jagged
                matrix syntax below:</p><div id="ID0EPCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EPCAAAAA_tabs"></div><div id="ID0EPCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EPCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EPCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EPCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EPCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EPCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EPCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EPCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre> <span class="highlight-keyword">double</span>[][] matrix = 
 {
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">3</span>, <span class="highlight-number">4</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">5</span>, <span class="highlight-number">6</span> },
};</pre></div><div id="ID0EPCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre> double[][] matrix = 
 {
    new double[] { 1, 2 },
    new double[] { 3, 4 },
    new double[] { 5, 6 },
};</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EPCAAAAA');</script><p>
                Special purpose matrices can also be created through specialized methods.
                Those include</p><div id="ID0ENCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ENCAAAAA_tabs"></div><div id="ID0ENCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ENCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ENCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ENCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ENCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ENCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ENCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ENCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Creates a vector of indices</span> 
<span class="highlight-keyword">int</span>[] idx = Matrix.Indices(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>);  <span class="highlight-comment">// { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }</span> 

<span class="highlight-comment">// Creates a step vector within a given interval</span> 
<span class="highlight-keyword">double</span>[] interval = Matrix.Interval(<span class="highlight-keyword">from</span>: <span class="highlight-number">-2</span>, to: <span class="highlight-number">4</span>); <span class="highlight-comment">// { -2, -1, 0, 1, 2, 3, 4 };</span> 

<span class="highlight-comment">// Special matrices</span> 
<span class="highlight-keyword">double</span>[,] I = Matrix.Identity(<span class="highlight-number">3</span>);     <span class="highlight-comment">// creates a 3x3 identity matrix</span> 
<span class="highlight-keyword">double</span>[,] magic = Matrix.Magic(<span class="highlight-number">5</span>);    <span class="highlight-comment">// creates a magic square matrix of size 5</span> 

<span class="highlight-keyword">double</span>[] v = Matrix.Vector(<span class="highlight-number">5</span>, <span class="highlight-number">1.0</span>);      <span class="highlight-comment">// generates { 1, 1, 1, 1, 1 }</span> 
<span class="highlight-keyword">double</span>[,] diagonal = Matrix.Diagonal(v); <span class="highlight-comment">// matrix with v on its diagonal</span></pre></div><div id="ID0ENCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Creates a vector of indices 
int[] idx = Matrix.Indices(0, 10);  // { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 } 

// Creates a step vector within a given interval 
double[] interval = Matrix.Interval(from: -2, to: 4); // { -2, -1, 0, 1, 2, 3, 4 }; 

// Special matrices 
double[,] I = Matrix.Identity(3);     // creates a 3x3 identity matrix 
double[,] magic = Matrix.Magic(5);    // creates a magic square matrix of size 5 

double[] v = Matrix.Vector(5, 1.0);      // generates { 1, 1, 1, 1, 1 } 
double[,] diagonal = Matrix.Diagonal(v); // matrix with v on its diagonal</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ENCAAAAA');</script><p>
                Another way to declare matrices is by parsing the contents of a string:</p><div id="ID0ELCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ELCAAAAA_tabs"></div><div id="ID0ELCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ELCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ELCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ELCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ELCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ELCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ELCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ELCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">string</span> str = <span class="highlight-literal">@"1 2
               3 4"</span>;

<span class="highlight-keyword">double</span>[,] matrix = Matrix.Parse(str);</pre></div><div id="ID0ELCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>string str = @"1 2
               3 4";

double[,] matrix = Matrix.Parse(str);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ELCAAAAA');</script><p>
                You can even read directly from matrices formatted in C# syntax:</p><div id="ID0EJCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EJCAAAAA_tabs"></div><div id="ID0EJCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EJCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EJCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EJCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EJCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EJCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EJCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EJCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">string</span> str = <span class="highlight-literal">@"double[,] matrix = 
               {
                  { 1, 2 },
                  { 3, 4 },
                  { 5, 6 },
               }"</span>;

matrix[,] mdimensional = Matrix.Parse(str, CSharpMatrixFormatProvider.InvariantCulture);
matrix[,] jagged = Matrix.ParseJagged(str, CSharpMatrixFormatProvider.InvariantCulture);</pre></div><div id="ID0EJCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>string str = @"double[,] matrix = 
               {
                  { 1, 2 },
                  { 3, 4 },
                  { 5, 6 },
               }";

matrix[,] mdimensional = Matrix.Parse(str, CSharpMatrixFormatProvider.InvariantCulture);
matrix[,] jagged = Matrix.ParseJagged(str, CSharpMatrixFormatProvider.InvariantCulture);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EJCAAAAA');</script><p>
                And even from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://www.gnu.org/software/octave/" target="_blank">Octave-compatible</a> syntax!</p><div id="ID0EHCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EHCAAAAA_tabs"></div><div id="ID0EHCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EHCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EHCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EHCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EHCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EHCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EHCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EHCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">string</span> str = <span class="highlight-literal">"[1 2; 3 4]"</span>;

matrix[,] matrix = Matrix.Parse(str, OctaveMatrixFormatProvider.InvariantCulture);</pre></div><div id="ID0EHCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>string str = "[1 2; 3 4]";

matrix[,] matrix = Matrix.Parse(str, OctaveMatrixFormatProvider.InvariantCulture);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EHCAAAAA');</script><p>
                There are also other methods, such as specialization for arrays and other formats.
                For more details, please take a look on <a href="T_Accord_Math_CSharpMatrixFormatProvider.htm" target="">CSharpMatrixFormatProvider</a>,
                <a href="T_Accord_Math_CSharpArrayFormatProvider.htm" target="">CSharpArrayFormatProvider</a>, <a href="T_Accord_Math_DefaultArrayFormatProvider.htm" target="">DefaultArrayFormatProvider</a>,
                <a href="T_Accord_Math_DefaultMatrixFormatProvider.htm" target="">DefaultMatrixFormatProvider</a> and <a href="M_Accord_Math_Matrix_Parse.htm" target="">Parse(String)</a>.
              </p><h2>Matrix operations</h2><p>
                Albeit being simple <span class="nolink"><span id="ID0ECBECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBECAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>double<span id="ID0EABECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABECAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script></span> matrices, the framework leverages
                .NET extension methods to support all basic matrix operations. For instance,
                consider the elementwise operations (also known as dot operations in Octave):</p><div id="ID0EDCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDCAAAAA_tabs"></div><div id="ID0EDCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">double</span>[] vector = { <span class="highlight-number">0</span>, <span class="highlight-number">2</span>, <span class="highlight-number">4</span> };
<span class="highlight-keyword">double</span>[] a = vector.ElementwiseMultiply(<span class="highlight-number">2</span>); <span class="highlight-comment">// vector .* 2, generates { 0,  4,  8 }</span> 
<span class="highlight-keyword">double</span>[] b = vector.ElementwiseDivide(<span class="highlight-number">2</span>);   <span class="highlight-comment">// vector ./ 2, generates { 0,  1,  2 }</span> 
<span class="highlight-keyword">double</span>[] c = vector.ElementwisePower(<span class="highlight-number">2</span>);    <span class="highlight-comment">// vector .^ 2, generates { 0,  4, 16 }</span></pre></div><div id="ID0EDCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>double[] vector = { 0, 2, 4 };
double[] a = vector.ElementwiseMultiply(2); // vector .* 2, generates { 0,  4,  8 } 
double[] b = vector.ElementwiseDivide(2);   // vector ./ 2, generates { 0,  1,  2 } 
double[] c = vector.ElementwisePower(2);    // vector .^ 2, generates { 0,  4, 16 }</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDCAAAAA');</script><p>
               Operations between vectors, matrices, and both are also completely supported:</p><div id="ID0EBCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBCAAAAA_tabs"></div><div id="ID0EBCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EBCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EBCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EBCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>  <span class="highlight-comment">// Declare two vectors</span> 
  <span class="highlight-keyword">double</span>[] u = { <span class="highlight-number">1</span>, <span class="highlight-number">6</span>, <span class="highlight-number">3</span> };
  <span class="highlight-keyword">double</span>[] v = { <span class="highlight-number">9</span>, <span class="highlight-number">4</span>, <span class="highlight-number">2</span> };

  <span class="highlight-comment">// Products between vectors</span> 
  <span class="highlight-keyword">double</span> inner = u.InnerProduct(v);    <span class="highlight-comment">// 39.0</span> 
  <span class="highlight-keyword">double</span>[,] outer = u.OuterProduct(v); <span class="highlight-comment">// see below</span> 
  <span class="highlight-keyword">double</span>[] kronecker = u.KroneckerProduct(v); <span class="highlight-comment">// { 9, 4, 2, 54, 24, 12, 27, 12, 6 }</span> 
  <span class="highlight-keyword">double</span>[][] cartesian = u.CartesianProduct(v); <span class="highlight-comment">// all possible pair-wise combinations</span> 

<span class="highlight-comment">/* outer =
   { 
      {  9,  4,  2 },
      { 54, 24, 12 },
      { 27, 12,  6 },
   };                  */</span> 

  <span class="highlight-comment">// Addition</span> 
  <span class="highlight-keyword">double</span>[] addv = u.Add(v); <span class="highlight-comment">// { 10, 10, 5 }</span> 
  <span class="highlight-keyword">double</span>[] add5 = u.Add(<span class="highlight-number">5</span>); <span class="highlight-comment">// {  6, 11, 8 }</span> 

  <span class="highlight-comment">// Elementwise operations</span> 
  <span class="highlight-keyword">double</span>[] abs = u.Abs();   <span class="highlight-comment">// { 1, 6, 3 }</span> 
  <span class="highlight-keyword">double</span>[] log = u.Log();   <span class="highlight-comment">// { 0, 1.79, 1.09 }</span> 

  <span class="highlight-comment">// Apply *any* function to all elements in a vector</span> 
  <span class="highlight-keyword">double</span>[] cos = u.Apply(Math.Cos); <span class="highlight-comment">// { 0.54, 0.96, -0.989 }</span>
  u.ApplyInPlace(Math.Cos); <span class="highlight-comment">// can also do optionally in-place</span> 


  <span class="highlight-comment">// Declare a matrix</span> 
  <span class="highlight-keyword">double</span>[,] M = 
  {
     { <span class="highlight-number">0</span>, <span class="highlight-number">5</span>, <span class="highlight-number">2</span> },
     { <span class="highlight-number">2</span>, <span class="highlight-number">1</span>, <span class="highlight-number">5</span> }
  };

  <span class="highlight-comment">// Extract a subvector from v:</span> 
  <span class="highlight-keyword">double</span>[] vcut = v.Submatrix(<span class="highlight-number">0</span>, <span class="highlight-number">1</span>); <span class="highlight-comment">// { 9, 4 }</span> 

  <span class="highlight-comment">// Some operations between vectors and matrices</span> 
  <span class="highlight-keyword">double</span>[] Mv = m.Multiply(v);    <span class="highlight-comment">//  { 24, 32 }</span> 
  <span class="highlight-keyword">double</span>[] vM = vcut.Multiply(m); <span class="highlight-comment">// { 8, 49, 38 }</span> 

  <span class="highlight-comment">// Some operations between matrices</span> 
  <span class="highlight-keyword">double</span>[,] Md = m.MultiplyByDiagonal(v);   <span class="highlight-comment">// { { 0, 20, 4 }, { 18, 4, 10 } }</span> 
  <span class="highlight-keyword">double</span>[,] MMt = m.MultiplyByTranspose(m); <span class="highlight-comment">//   { { 29, 15 }, { 15, 30 } }</span></pre></div><div id="ID0EBCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>  // Declare two vectors 
  double[] u = { 1, 6, 3 };
  double[] v = { 9, 4, 2 };

  // Products between vectors 
  double inner = u.InnerProduct(v);    // 39.0 
  double[,] outer = u.OuterProduct(v); // see below 
  double[] kronecker = u.KroneckerProduct(v); // { 9, 4, 2, 54, 24, 12, 27, 12, 6 } 
  double[][] cartesian = u.CartesianProduct(v); // all possible pair-wise combinations 

/* outer =
   { 
      {  9,  4,  2 },
      { 54, 24, 12 },
      { 27, 12,  6 },
   };                  */ 

  // Addition 
  double[] addv = u.Add(v); // { 10, 10, 5 } 
  double[] add5 = u.Add(5); // {  6, 11, 8 } 

  // Elementwise operations 
  double[] abs = u.Abs();   // { 1, 6, 3 } 
  double[] log = u.Log();   // { 0, 1.79, 1.09 } 

  // Apply *any* function to all elements in a vector 
  double[] cos = u.Apply(Math.Cos); // { 0.54, 0.96, -0.989 }
  u.ApplyInPlace(Math.Cos); // can also do optionally in-place 


  // Declare a matrix 
  double[,] M = 
  {
     { 0, 5, 2 },
     { 2, 1, 5 }
  };

  // Extract a subvector from v: 
  double[] vcut = v.Submatrix(0, 1); // { 9, 4 } 

  // Some operations between vectors and matrices 
  double[] Mv = m.Multiply(v);    //  { 24, 32 } 
  double[] vM = vcut.Multiply(m); // { 8, 49, 38 } 

  // Some operations between matrices 
  double[,] Md = m.MultiplyByDiagonal(v);   // { { 0, 20, 4 }, { 18, 4, 10 } } 
  double[,] MMt = m.MultiplyByTranspose(m); //   { { 29, 15 }, { 15, 30 } }</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBCAAAAA');</script><p>
               Please note this is by no means an extensive list; please take a look on
               all members available on this class or (preferably) use IntelliSense to
               navigate through all possible options when trying to perform an operation.</p><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Math_Matrix.htm" target="">Matrix Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Math.htm" target="">Accord.Math Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_DefaultMatrixFormatProvider.htm" target="">Accord.Math<span id="ID0EBAFAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAFAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>DefaultMatrixFormatProvider</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_DefaultArrayFormatProvider.htm" target="">Accord.Math<span id="ID0EBAEAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAEAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>DefaultArrayFormatProvider</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_OctaveMatrixFormatProvider.htm" target="">Accord.Math<span id="ID0EBADAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBADAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>OctaveMatrixFormatProvider</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_OctaveArrayFormatProvider.htm" target="">Accord.Math<span id="ID0EBACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBACAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>OctaveArrayFormatProvider</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_CSharpMatrixFormatProvider.htm" target="">Accord.Math<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CSharpMatrixFormatProvider</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_CSharpArrayFormatProvider.htm" target="">Accord.Math<span id="ID0EBAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAAAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CSharpArrayFormatProvider</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord-net.github.io/" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+Matrix+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>