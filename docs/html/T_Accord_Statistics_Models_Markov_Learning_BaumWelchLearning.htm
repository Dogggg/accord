<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../Styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../Styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../Scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>BaumWelchLearning Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="BaumWelchLearning class" />
    <meta name="System.Keywords" content="Accord.Statistics.Models.Markov.Learning.BaumWelchLearning class" />
    <meta name="System.Keywords" content="BaumWelchLearning class, about BaumWelchLearning class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Models.Markov.Learning.BaumWelchLearning" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Models.Markov.Learning.BaumWelchLearning" />
    <meta name="Description" content="Baum-Welch learning algorithm for discrete-density Hidden Markov Models." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.Statistics.Models.Markov.Learning" />
    <meta name="file" content="T_Accord_Statistics_Models_Markov_Learning_BaumWelchLearning" />
    <meta name="guid" content="T_Accord_Statistics_Models_Markov_Learning_BaumWelchLearning" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <div class="OH_topic">
          <div class="OH_title">
            <table>
              <tr>
                <td class="OH_tdTitleColumn">BaumWelchLearning Class</td>
                <td class="OH_tdLogoColumn">
                  <img align="right" src="./../icons/Accord.NET.png" />
                </td>
              </tr>
            </table>
          </div>
        </div>
        <div class="OH_feedbacklink">
          <a href="mailto:?subject=Accord.NET+Framework+BaumWelchLearning+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a>
        </div>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
              Baum-Welch learning algorithm for discrete-density Hidden Markov Models.
            </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBHOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBHOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <a href="T_Accord_Statistics_Models_Markov_Learning_BaseBaumWelchLearning.htm" target="">Accord.Statistics.Models.Markov.Learning<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>BaseBaumWelchLearning</a><br />    <span class="selflink">Accord.Statistics.Models.Markov.Learning<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>BaumWelchLearning</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_Statistics_Models_Markov_Learning.htm" target="">Accord.Statistics.Models.Markov.Learning</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Statistics</span> (in Accord.Statistics.dll) Version: 2.8.0.0 (2.8.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BaumWelchLearning</span> : <a href="T_Accord_Statistics_Models_Markov_Learning_BaseBaumWelchLearning.htm">BaseBaumWelchLearning</a>, 
	<a href="T_Accord_Statistics_Models_Markov_Learning_IUnsupervisedLearning.htm">IUnsupervisedLearning</a>, <a href="T_Accord_Statistics_Models_IConvergenceLearning.htm">IConvergenceLearning</a></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public class BaumWelchLearning : BaseBaumWelchLearning, 
	IUnsupervisedLearning, IConvergenceLearning</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              The Baum-Welch algorithm is a kind of Expectation-Maximization algorithm.
              For discrete models, it estimates the matrix of state transition probabilities
              A, the matrix of symbol emission probabilities B and the vector of initial
              state probabilities pi. For increased accuracy, all computations are performed
              using log-probabilities.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// We will try to create a Hidden Markov Model which</span> 
<span class="highlight-comment">//  can detect if a given sequence starts with a zero</span> 
<span class="highlight-comment">//  and has any number of ones after that.</span> 
<span class="highlight-keyword">int</span>[][] sequences = <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[][] 
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>         },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>       },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span> },
};

<span class="highlight-comment">// Creates a new Hidden Markov Model with 3 states for</span> 
<span class="highlight-comment">//  an output alphabet of two characters (zero and one)</span>
HiddenMarkovModel hmm = <span class="highlight-keyword">new</span> HiddenMarkovModel(<span class="highlight-number">3</span>, <span class="highlight-number">2</span>);

<span class="highlight-comment">// Try to fit the model to the data until the difference in</span> 
<span class="highlight-comment">//  the average log-likelihood changes only by as little as 0.0001</span> 
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> BaumWelchLearning(hmm) { Tolerance = <span class="highlight-number">0.0001</span>, Iterations = <span class="highlight-number">0</span> };
<span class="highlight-keyword">double</span> ll = teacher.Run(sequences);

<span class="highlight-comment">// Calculate the probability that the given</span> 
<span class="highlight-comment">//  sequences originated from the model</span> 
<span class="highlight-keyword">double</span> l1 = hmm.Evaluate(<span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> });       <span class="highlight-comment">// 0.999</span> 
<span class="highlight-keyword">double</span> l2 = hmm.Evaluate(<span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }); <span class="highlight-comment">// 0.916</span> 

<span class="highlight-comment">// Sequences which do not start with zero have much lesser probability.</span> 
<span class="highlight-keyword">double</span> l3 = hmm.Evaluate(<span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span> });       <span class="highlight-comment">// 0.000</span> 
<span class="highlight-keyword">double</span> l4 = hmm.Evaluate(<span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }); <span class="highlight-comment">// 0.000</span> 

<span class="highlight-comment">// Sequences which contains few errors have higher probabability</span> 
<span class="highlight-comment">//  than the ones which do not start with zero. This shows some</span> 
<span class="highlight-comment">//  of the temporal elasticity and error tolerance of the HMMs.</span> 
<span class="highlight-keyword">double</span> l5 = hmm.Evaluate(<span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }); <span class="highlight-comment">// 0.034</span> 
<span class="highlight-keyword">double</span> l6 = hmm.Evaluate(<span class="highlight-keyword">new</span> <span class="highlight-keyword">int</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }); <span class="highlight-comment">// 0.034</span></pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// We will try to create a Hidden Markov Model which 
//  can detect if a given sequence starts with a zero 
//  and has any number of ones after that. 
int[][] sequences = new int[][] 
{
    new int[] { 0,1,1,1,1,0,1,1,1,1 },
    new int[] { 0,1,1,1,0,1,1,1,1,1 },
    new int[] { 0,1,1,1,1,1,1,1,1,1 },
    new int[] { 0,1,1,1,1,1         },
    new int[] { 0,1,1,1,1,1,1       },
    new int[] { 0,1,1,1,1,1,1,1,1,1 },
    new int[] { 0,1,1,1,1,1,1,1,1,1 },
};

// Creates a new Hidden Markov Model with 3 states for 
//  an output alphabet of two characters (zero and one)
HiddenMarkovModel hmm = new HiddenMarkovModel(3, 2);

// Try to fit the model to the data until the difference in 
//  the average log-likelihood changes only by as little as 0.0001 
var teacher = new BaumWelchLearning(hmm) { Tolerance = 0.0001, Iterations = 0 };
double ll = teacher.Run(sequences);

// Calculate the probability that the given 
//  sequences originated from the model 
double l1 = hmm.Evaluate(new int[] { 0, 1 });       // 0.999 
double l2 = hmm.Evaluate(new int[] { 0, 1, 1, 1 }); // 0.916 

// Sequences which do not start with zero have much lesser probability. 
double l3 = hmm.Evaluate(new int[] { 1, 1 });       // 0.000 
double l4 = hmm.Evaluate(new int[] { 1, 0, 0, 0 }); // 0.000 

// Sequences which contains few errors have higher probabability 
//  than the ones which do not start with zero. This shows some 
//  of the temporal elasticity and error tolerance of the HMMs. 
double l5 = hmm.Evaluate(new int[] { 0, 1, 0, 1, 1, 1, 1, 1, 1 }); // 0.034 
double l6 = hmm.Evaluate(new int[] { 0, 1, 1, 1, 1, 1, 1, 0, 1 }); // 0.034</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Statistics_Models_Markov_Learning_BaumWelchLearning.htm" target="">BaumWelchLearning Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Models_Markov_Learning.htm" target="">Accord.Statistics.Models.Markov.Learning Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel.htm" target="">Accord.Statistics.Models.Markov<span id="ID0EBACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBACAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>HiddenMarkovModel</a></div><div class="seeAlsoStyle"><a href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel_1.htm" target="">Accord.Statistics.Models.Markov<span id="ID0EEABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>HiddenMarkovModel<span id="ID0ECABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TDistribution<span id="ID0EAABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></div><div class="seeAlsoStyle"><a href="T_Accord_Statistics_Models_Markov_Learning_BaumWelchLearning_1.htm" target="">Accord.Statistics.Models.Markov.Learning<span id="ID0EEAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAAAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>BaumWelchLearning<span id="ID0ECAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAAAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TDistribution<span id="ID0EAAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAAAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2012. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+BaumWelchLearning+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>