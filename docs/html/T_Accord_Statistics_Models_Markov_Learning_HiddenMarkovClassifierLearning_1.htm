<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>HiddenMarkovClassifierLearning(TDistribution) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="HiddenMarkovClassifierLearning%3CTDistribution%3E class" />
    <meta name="System.Keywords" content="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning%3CTDistribution%3E class" />
    <meta name="System.Keywords" content="HiddenMarkovClassifierLearning%3CTDistribution%3E class, about HiddenMarkovClassifierLearning%3CTDistribution%3E class" />
    <meta name="System.Keywords" content="HiddenMarkovClassifierLearning(Of TDistribution) class" />
    <meta name="System.Keywords" content="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning(Of TDistribution) class" />
    <meta name="System.Keywords" content="HiddenMarkovClassifierLearning(Of TDistribution) class, about HiddenMarkovClassifierLearning(Of TDistribution) class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning`1" />
    <meta name="Description" content="Arbitrary-density hidden Markov Sequence Classifier learning algorithm." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="Accord.Statistics.Models.Markov.Learning" />
    <meta name="file" content="T_Accord_Statistics_Models_Markov_Learning_HiddenMarkovClassifierLearning_1" />
    <meta name="guid" content="T_Accord_Statistics_Models_Markov_Learning_HiddenMarkovClassifierLearning_1" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="T:Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning`1" />
      <MSHelp:TOCTitle Title="HiddenMarkovClassifierLearning(TDistribution) Class" />
      <MSHelp:RLTitle Title="HiddenMarkovClassifierLearning(TDistribution) Class (Accord.Statistics.Models.Markov.Learning)" />
      <MSHelp:Keyword Index="A" Term="T:Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning`1" />
      <MSHelp:Keyword Index="A" Term="frlrfAccordStatisticsModelsMarkovLearningHiddenMarkovClassifierLearning1ClassTopic" />
      <MSHelp:Keyword Index="K" Term="HiddenMarkovClassifierLearning%3CTDistribution%3E class" />
      <MSHelp:Keyword Index="K" Term="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning%3CTDistribution%3E class" />
      <MSHelp:Keyword Index="K" Term="HiddenMarkovClassifierLearning%3CTDistribution%3E class, about HiddenMarkovClassifierLearning%3CTDistribution%3E class" />
      <MSHelp:Keyword Index="K" Term="HiddenMarkovClassifierLearning(Of TDistribution) class" />
      <MSHelp:Keyword Index="K" Term="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning(Of TDistribution) class" />
      <MSHelp:Keyword Index="K" Term="HiddenMarkovClassifierLearning(Of TDistribution) class, about HiddenMarkovClassifierLearning(Of TDistribution) class" />
      <MSHelp:Keyword Index="F" Term="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning`1" />
      <MSHelp:Attr Name="HelpPriority" Value="2" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="Accord.Statistics.dll" />
      <MSHelp:Attr Name="APIName" Value="Accord.Statistics.Models.Markov.Learning.HiddenMarkovClassifierLearning`1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="Arbitrary-density hidden Markov Sequence Classifier learning algorithm." />
      <MSHelp:Attr Name="AssemblyVersion" Value="2.6.1.0" />
    </xml>
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <table id="topTable" cellspacing="0" cellpadding="0">
              <tr>
                <td>
                  <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
                    <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span>
                  <span>    </span>
                  <span id="devlangsDropdown" class="filter" tabindex="0">
                    <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label></span>
                </td>
              </tr>
            </table>
            <div id="devlangsMenu">
              <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
              <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
              <br />
              <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
              <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
              <br />
            </div>
            <table id="bottomTable" cellpadding="0" cellspacing="0">
              <tr id="headerTableRow1">
                <td align="left">
                  <span id="runningHeaderText">Accord.NET Framework</span>
                </td>
              </tr>
              <tr id="headerTableRow2">
                <td align="left">
                  <span id="nsrTitle">HiddenMarkovClassifierLearning<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><span class="typeparameter">TDistribution</span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span> Class</span>
                </td>
              </tr>
              <tr id="headerTableRow3">
                <td align="left">
                  <a href="AllMembers_T_Accord_Statistics_Models_Markov_Learning_HiddenMarkovClassifierLearning_1.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('','Accord.NET Framework','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td>
              </tr>
            </table>
          </td>
          <td align="center" style="width: 1px; padding: 0px">
            <img src="../icons/Accord.NET.png" />
          </td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <span style="color: DarkGray"></span>
        <div class="summary">
               Arbitrary-density hidden Markov Sequence Classifier learning algorithm.
             </div>
        <p />
        <b>Namespace:</b> <a href="N_Accord_Statistics_Models_Markov_Learning.htm">Accord.Statistics.Models.Markov.Learning</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Statistics</span> (in Accord.Statistics.dll) Version: 2.6.1.0 (2.6.1.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">HiddenMarkovClassifierLearning</span>&lt;TDistribution&gt; : <a href="T_Accord_Statistics_Models_Markov_Learning_BaseHiddenMarkovClassifierLearning_2.htm">BaseHiddenMarkovClassifierLearning</a>&lt;<a href="T_Accord_Statistics_Models_Markov_HiddenMarkovClassifier_1.htm">HiddenMarkovClassifier</a>&lt;TDistribution&gt;, <a href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel_1.htm">HiddenMarkovModel</a>&lt;TDistribution&gt;&gt;
<span class="keyword">where</span> TDistribution : <a href="T_Accord_Statistics_Distributions_IDistribution.htm">IDistribution</a>
</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">HiddenMarkovClassifierLearning</span>(<span class="keyword">Of</span> TDistribution <span class="keyword">As</span> <a href="T_Accord_Statistics_Distributions_IDistribution.htm">IDistribution</a>) _
	<span class="keyword">Inherits</span> <a href="T_Accord_Statistics_Models_Markov_Learning_BaseHiddenMarkovClassifierLearning_2.htm">BaseHiddenMarkovClassifierLearning</a>(<span class="keyword">Of</span> <a href="T_Accord_Statistics_Models_Markov_HiddenMarkovClassifier_1.htm">HiddenMarkovClassifier</a>(<span class="keyword">Of</span> TDistribution), <a href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel_1.htm">HiddenMarkovModel</a>(<span class="keyword">Of</span> TDistribution))</pre></td></tr></table></span></div><h1 class="heading"><span onclick="ExpandCollapse(templatesToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(templatesToggle, event)" tabindex="0"><img id="templatesToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Type Parameters</span></h1><div id="templatesSection" class="section" name="collapseableSection" style=""><dl><dt><span class="parameter">TDistribution</span></dt><dd /></dl></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>
               The following example creates a continuous-density hidden Markov model sequence
               classifier to recognize two classes of univariate sequence of observations.</p><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a Continuous density Hidden Markov Model Sequence Classifier</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// to detect a univariate sequence and the same sequence backwards.</span>
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">double</span>[][] sequences = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][] 
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">2</span>,<span class="highlight-number">3</span>,<span class="highlight-number">4</span> }, <span class="highlight-comment">// This is the first  sequence with label = 0</span>
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>,<span class="highlight-number">3</span>,<span class="highlight-number">2</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span> }, <span class="highlight-comment">// This is the second sequence with label = 1</span>
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>};
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Labels for the sequences</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span>[] labels = { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> };
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Creates a new Continuous-density Hidden Markov Model Sequence Classifier</span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">//  containing 2 hidden Markov Models with 2 states and an underlying Normal</span>
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">//  distribution as the continuous probability density.</span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>NormalDistribution density = <span class="highlight-keyword">new</span> NormalDistribution();
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>var classifier = <span class="highlight-keyword">new</span> SequenceClassifier&lt;NormalDistribution&gt;(<span class="highlight-number">2</span>, <span class="highlight-keyword">new</span> Ergodic(<span class="highlight-number">2</span>), density);
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a new learning algorithm to train the sequence classifier</span>
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>var teacher = <span class="highlight-keyword">new</span> SequenceClassifierLearning&lt;NormalDistribution&gt;(classifier,
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Train each model until the log-likelihood changes less than 0.001</span>
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    modelIndex =&gt; <span class="highlight-keyword">new</span> BaumWelchLearning&lt;NormalDistribution&gt;(classifier.Models[modelIndex])
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Tolerance = <span class="highlight-number">0.0001</span>,
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Iterations = <span class="highlight-number">0</span>
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>);
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Train the sequence classifier using the algorithm</span>
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>teacher.Run(sequences, labels);
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Calculate the probability that the given</span>
<span class="highlight-lineno">34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">//  sequences originated from the model</span>
<span class="highlight-lineno">35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">double</span> likelihood;
<span class="highlight-lineno">36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Try to classify the first sequence (output should be 0)</span>
<span class="highlight-lineno">38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> c1 = classifier.Compute(sequences[<span class="highlight-number">0</span>], <span class="highlight-keyword">out</span> likelihood);
<span class="highlight-lineno">39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Try to classify the second sequence (output should be 1)</span>
<span class="highlight-lineno">41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> c2 = classifier.Compute(sequences[<span class="highlight-number">1</span>], <span class="highlight-keyword">out</span> likelihood);</pre></div></span><p>
               The following example creates a continuous-density hidden Markov model sequence
               classifier to recognize two classes of multivariate sequence of observations.</p><span id="cbc_2" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Create a Continuous density Hidden Markov Model Sequence Classifier</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// to detect a multivariate sequence and the same sequence backwards.</span>
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">double</span>[][][] sequences = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][][]
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][] 
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    { 
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// This is the first  sequence with label = 0</span>
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span> },
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span> },
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span> },
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">3</span> },
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span> },
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }, 
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][]
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-comment">// This is the second sequence with label = 1</span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span> },
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">3</span> },
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span> },
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span> },
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span> },
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>};
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Labels for the sequences</span>
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span>[] labels = { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> };
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Creates a sequence classifier containing 2 hidden Markov Models</span>
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">//  with 2 states and an underlying Normal distribution as density.</span>
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>MultivariateNormalDistribution density = <span class="highlight-keyword">new</span> MultivariateNormalDistribution(<span class="highlight-number">1</span>);
<span class="highlight-lineno">32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>var classifier = <span class="highlight-keyword">new</span> HiddenMarkovClassifier&lt;MultivariateNormalDistribution&gt;(<span class="highlight-number">2</span>, <span class="highlight-keyword">new</span> Ergodic(<span class="highlight-number">2</span>), density);
<span class="highlight-lineno">33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Configure the learning algorithms to train the sequence classifier</span>
<span class="highlight-lineno">35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>var teacher = <span class="highlight-keyword">new</span> HiddenMarkovLearning&lt;MultivariateNormalDistribution&gt;(classifier,
<span class="highlight-lineno">36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   <span class="highlight-comment">// Train each model until the log-likelihood changes less than 0.001</span>
<span class="highlight-lineno">38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   modelIndex =&gt; <span class="highlight-keyword">new</span> BaumWelchLearning&lt;NormalDistribution&gt;(classifier.Models[modelIndex])
<span class="highlight-lineno">39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   {
<span class="highlight-lineno">40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Tolerance = <span class="highlight-number">0.0001</span>,
<span class="highlight-lineno">41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Iterations = <span class="highlight-number">0</span>
<span class="highlight-lineno">42</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   {
<span class="highlight-lineno">43</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>);
<span class="highlight-lineno">44</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">45</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Train the sequence classifier using the algorithm</span>
<span class="highlight-lineno">46</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">double</span> logLikelihood = teacher.Run(sequences, labels);
<span class="highlight-lineno">47</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">48</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">49</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Calculate the probability that the given</span>
<span class="highlight-lineno">50</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">//  sequences originated from the model</span>
<span class="highlight-lineno">51</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">double</span> likelihood1, likelihood2;
<span class="highlight-lineno">52</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">53</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Try to classify the first sequence (output should be 0)</span>
<span class="highlight-lineno">54</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> c1 = classifier.Compute(sequences[<span class="highlight-number">0</span>], <span class="highlight-keyword">out</span> likelihood1);
<span class="highlight-lineno">55</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">56</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Try to classify the second sequence (output should be 1)</span>
<span class="highlight-lineno">57</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> c2 = classifier.Compute(sequences[<span class="highlight-number">1</span>], <span class="highlight-keyword">out</span> likelihood2);</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <a href="T_Accord_Statistics_Models_Markov_Learning_BaseHiddenMarkovClassifierLearning_2.htm">Accord.Statistics.Models.Markov.Learning<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>BaseHiddenMarkovClassifierLearning</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><a href="T_Accord_Statistics_Models_Markov_HiddenMarkovClassifier_1.htm">HiddenMarkovClassifier</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><span class="selflink"><span class="typeparam">TDistribution</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span>, <a href="T_Accord_Statistics_Models_Markov_HiddenMarkovModel_1.htm">HiddenMarkovModel</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><span class="selflink"><span class="typeparam">TDistribution</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span><br />    <span class="selflink">Accord.Statistics.Models.Markov.Learning<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>HiddenMarkovClassifierLearning<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TDistribution<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Statistics_Models_Markov_Learning_HiddenMarkovClassifierLearning_1.htm">HiddenMarkovClassifierLearning<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TDistribution<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span> Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Models_Markov_Learning.htm">Accord.Statistics.Models.Markov.Learning Namespace</a></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
        <A NAME="feedback"></A>
        <span id="fb" class="feedbackcss"></span>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2012. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.  <script type="text/javascript">    var _gaq = _gaq || [];   _gaq.push(['_setAccount', 'UA-3114672-4']);   _gaq.push(['_trackPageview']);    (function() {     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;     ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);   })();  </script></div>
    </div>
  </body>
</html>