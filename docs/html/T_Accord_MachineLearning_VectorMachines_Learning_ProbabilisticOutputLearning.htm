<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>ProbabilisticOutputLearning Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="ProbabilisticOutputLearning class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputLearning class" />
    <meta name="System.Keywords" content="ProbabilisticOutputLearning class, about ProbabilisticOutputLearning class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputLearning" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputLearning" />
    <meta name="Description" content="Probabilistic Output Calibration." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning.VectorMachines.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputLearning" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputLearning" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">ProbabilisticOutputLearning Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
              Probabilistic Output Calibration.
            </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBENAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBENAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="ID0EBBNAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBNAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>ProbabilisticOutputLearning</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning_VectorMachines_Learning.htm" target="">Accord.MachineLearning.VectorMachines.Learning</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.8.2.0 (2.8.2.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAADAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAADAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAADAAAAA_tabimgleft"></div><div id="ID0EAADAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAADAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAADAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAADAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAADAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAADAAAAA_tabimgright"></div></div><div id="ID0EAADAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAADAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAADAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAADAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAADAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAADAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAADAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAADAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ProbabilisticOutputLearning</span> : <a href="T_Accord_MachineLearning_VectorMachines_Learning_ISupportVectorMachineLearning.htm">ISupportVectorMachineLearning</a></pre></div><div id="ID0EAADAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public class ProbabilisticOutputLearning : ISupportVectorMachineLearning</pre></div><div id="ID0EAADAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAADAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAADAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>Instead of producing probabilistic outputs, Support Vector Machines
              express their decisions in the form of a distance from support vectors in
              feature space. In order to convert the SVM outputs into probabilities,
              Platt (1999) proposed the calibration of the SVM outputs using a sigmoid
              (logit) link function. Later, Lin et al (2007) provided a corrected and
              improved version of Platt's probabilistic outputs. This clas implements
              the later.</p><p>This class is not an actual learning algorithm, but a calibrator.
              Machines passed as input to this algorithm should already have been trained
              by a proper learning algorithm such as <a href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization.htm" target="">
              Sequential Minimal Optimization (SMO)</a>.</p><div id="ID0EBCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBCAAAAA_tabs"></div><div id="ID0EBCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EBCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EBCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EBCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Example XOR problem</span> 
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0 xor 0: 1 (label +1)</span> 
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 0 xor 1: 0 (label -1)</span> 
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 1 xor 0: 0 (label -1)</span> 
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }  <span class="highlight-comment">// 1 xor 1: 1 (label +1)</span>
};

<span class="highlight-comment">// Dichotomy SVM outputs should be given as [-1;+1]</span> 
<span class="highlight-keyword">int</span>[] labels =
{
    <span class="highlight-number">1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">1</span>
};

<span class="highlight-comment">// Create a Kernel Support Vector Machine for the given inputs</span>
KernelSupportVectorMachine svm = <span class="highlight-keyword">new</span> KernelSupportVectorMachine(<span class="highlight-keyword">new</span> Gaussian(<span class="highlight-number">0.1</span>), inputs[<span class="highlight-number">0</span>].Length);

<span class="highlight-comment">// Instantiate a new learning algorithm for SVMs</span>
SequentialMinimalOptimization smo = <span class="highlight-keyword">new</span> SequentialMinimalOptimization(svm, inputs, labels);

<span class="highlight-comment">// Set up the learning algorithm</span>
smo.Complexity = <span class="highlight-number">1.0</span>;

<span class="highlight-comment">// Run the learning algorithm</span> 
<span class="highlight-keyword">double</span> error = smo.Run();

<span class="highlight-comment">// Instantiate the probabilistic learning calibration</span>
ProbabilisticOutputLearning calibration = <span class="highlight-keyword">new</span> ProbabilisticOutputLearning(svm, inputs, labels);

<span class="highlight-comment">// Run the calibration algorithm</span> 
<span class="highlight-keyword">double</span> loglikelihood = calibration.Run();


<span class="highlight-comment">// Compute the decision output for one of the input vectors,</span> 
<span class="highlight-comment">// while also retrieving the probability of the answer</span> 

<span class="highlight-keyword">double</span> probability;
<span class="highlight-keyword">int</span> decision = svm.Compute(inputs[<span class="highlight-number">0</span>], <span class="highlight-keyword">out</span> probability);

<span class="highlight-comment">// At this point, decision is +1 with a probability of 75%</span></pre></div><div id="ID0EBCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Example XOR problem 
double[][] inputs =
{
    new double[] { 0, 0 }, // 0 xor 0: 1 (label +1) 
    new double[] { 0, 1 }, // 0 xor 1: 0 (label -1) 
    new double[] { 1, 0 }, // 1 xor 0: 0 (label -1) 
    new double[] { 1, 1 }  // 1 xor 1: 1 (label +1)
};

// Dichotomy SVM outputs should be given as [-1;+1] 
int[] labels =
{
    1, -1, -1, 1
};

// Create a Kernel Support Vector Machine for the given inputs
KernelSupportVectorMachine svm = new KernelSupportVectorMachine(new Gaussian(0.1), inputs[0].Length);

// Instantiate a new learning algorithm for SVMs
SequentialMinimalOptimization smo = new SequentialMinimalOptimization(svm, inputs, labels);

// Set up the learning algorithm
smo.Complexity = 1.0;

// Run the learning algorithm 
double error = smo.Run();

// Instantiate the probabilistic learning calibration
ProbabilisticOutputLearning calibration = new ProbabilisticOutputLearning(svm, inputs, labels);

// Run the calibration algorithm 
double loglikelihood = calibration.Run();


// Compute the decision output for one of the input vectors, 
// while also retrieving the probability of the answer 

double probability;
int decision = svm.Compute(inputs[0], out probability);

// At this point, decision is +1 with a probability of 75%</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBCAAAAA');</script><p>
              References:
              <ul><li>
                   John C. Platt. 1999. Probabilistic Outputs for Support Vector Machines and Comparisons to
                   Regularized Likelihood Methods. In ADVANCES IN LARGE MARGIN CLASSIFIERS (1999), pp. 61-74.</li><li>
                  Hsuan-Tien Lin, Chih-Jen Lin, and Ruby C. Weng. 2007. A note on Platt's probabilistic outputs
                  for support vector machines. Mach. Learn. 68, 3 (October 2007), 267-276. </li></ul></p><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputLearning.htm" target="">ProbabilisticOutputLearning Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines_Learning.htm" target="">Accord.MachineLearning.VectorMachines.Learning Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+ProbabilisticOutputLearning+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>