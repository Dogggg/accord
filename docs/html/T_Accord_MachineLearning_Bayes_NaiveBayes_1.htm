<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:xhtml="http://www.w3.org/1999/xhtml">
  <head>
    <link rel="SHORTCUT ICON" href="./../branding/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="./../branding/branding-en-US.css" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled {background-image: url('./../branding/tabLeftBG.gif')}.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled {background-image: url('./../branding/tabRightBG.gif')}.OH_footer { background-image: url('./../branding/footer_slice.gif'); background-position:top; background-repeat:repeat-x}</style>
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../branding/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>NaiveBayes(TDistribution) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="NaiveBayes%3CTDistribution%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Bayes.NaiveBayes%3CTDistribution%3E class" />
    <meta name="System.Keywords" content="NaiveBayes%3CTDistribution%3E class, about NaiveBayes%3CTDistribution%3E class" />
    <meta name="System.Keywords" content="NaiveBayes(Of TDistribution) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Bayes.NaiveBayes(Of TDistribution) class" />
    <meta name="System.Keywords" content="NaiveBayes(Of TDistribution) class, about NaiveBayes(Of TDistribution) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.Bayes.NaiveBayes`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.Bayes.NaiveBayes`1" />
    <meta name="Description" content="Naïve Bayes Classifier for arbitrary distributions." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning.Bayes" />
    <meta name="file" content="T_Accord_MachineLearning_Bayes_NaiveBayes_1" />
    <meta name="guid" content="T_Accord_MachineLearning_Bayes_NaiveBayes_1" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="T:Accord.MachineLearning.Bayes.NaiveBayes`1" />
      <MSHelp:TOCTitle Title="NaiveBayes(TDistribution) Class" />
      <MSHelp:RLTitle Title="NaiveBayes(TDistribution) Class (Accord.MachineLearning.Bayes)" />
      <MSHelp:Keyword Index="A" Term="T:Accord.MachineLearning.Bayes.NaiveBayes`1" />
      <MSHelp:Keyword Index="A" Term="frlrfAccordMachineLearningBayesNaiveBayes1ClassTopic" />
      <MSHelp:Keyword Index="K" Term="NaiveBayes%3CTDistribution%3E class" />
      <MSHelp:Keyword Index="K" Term="Accord.MachineLearning.Bayes.NaiveBayes%3CTDistribution%3E class" />
      <MSHelp:Keyword Index="K" Term="NaiveBayes%3CTDistribution%3E class, about NaiveBayes%3CTDistribution%3E class" />
      <MSHelp:Keyword Index="K" Term="NaiveBayes(Of TDistribution) class" />
      <MSHelp:Keyword Index="K" Term="Accord.MachineLearning.Bayes.NaiveBayes(Of TDistribution) class" />
      <MSHelp:Keyword Index="K" Term="NaiveBayes(Of TDistribution) class, about NaiveBayes(Of TDistribution) class" />
      <MSHelp:Keyword Index="F" Term="Accord.MachineLearning.Bayes.NaiveBayes`1" />
      <MSHelp:Attr Name="HelpPriority" Value="2" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="Accord.MachineLearning.dll" />
      <MSHelp:Attr Name="APIName" Value="Accord.MachineLearning.Bayes.NaiveBayes`1" />
      <MSHelp:Attr Name="DevLang" Value="C#" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="Naïve Bayes Classifier for arbitrary distributions." />
      <MSHelp:Attr Name="AssemblyVersion" Value="2.7.1.0" />
    </xml>
    <link type="text/css" rel="stylesheet" href="./../styles/Presentation.css" />
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <div class="OH_topic">
          <div class="OH_title">
            <table>
              <tr>
                <td class="OH_tdTitleColumn">NaiveBayes<span id="ID0EDCAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDCAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TDistribution</span><span id="ID0EBCAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</td>
                <td class="OH_tdLogoColumn">
                  <img align="right" src="./../icons/Accord.NET.png" />
                </td>
              </tr>
            </table>
          </div>
        </div>
        <div class="OH_feedbacklink">
          <a href="mailto:?subject=Accord.NET+Framework+NaiveBayes(TDistribution)+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a>
        </div>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../branding/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_blank">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               Naïve Bayes Classifier for arbitrary distributions.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../branding/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning.Bayes<span id="ID0EEBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NaiveBayes<span id="ID0ECBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBOAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TDistribution<span id="ID0EABOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABOAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></span><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning_Bayes.htm" target="">Accord.MachineLearning.Bayes</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.7.1.0 (2.7.1.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EABEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EABEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EABEAAAAA_tabimgleft"></div><div id="ID0EABEAAAAA_tab1" class="OH_CodeSnippetContainerTabDisabled" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EABEAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="javascript:ChangeTab('ID0EABEAAAAA','C#','2','5')">C#</a></div><div id="ID0EABEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EABEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div id="ID0EABEAAAAA_tab5" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>JScript</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EABEAAAAA_tabimgright"></div></div><div id="ID0EABEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EABEAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EABEAAAAA','5')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EABEAAAAA_copycode" href="javascript:CopyToClipboard('ID0EABEAAAAA','5')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EABEAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EABEAAAAA','5')" title="Print">Print</a></div></div><div id="ID0EABEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre style="white-space:pre-line;word-wrap:normal;">[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">NaiveBayes</span>&lt;TDistribution&gt;
<span class="keyword">where</span> TDistribution : <a href="T_Accord_Statistics_Distributions_IUnivariateDistribution.htm">IUnivariateDistribution</a></pre></div><div id="ID0EABEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class NaiveBayes&lt;TDistribution&gt;
where TDistribution : IUnivariateDistribution</pre></div><div id="ID0EABEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div5" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div5" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EABEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">TDistribution</span></dt><dd></dd></dl><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               A naive Bayes classifier is a simple probabilistic classifier based on applying Bayes' theorem
               with strong (naive) independence assumptions. A more descriptive term for the underlying probability
               model would be "independent feature model".</p><p>
               In simple terms, a naive Bayes classifier assumes that the presence (or absence) of a particular
               feature of a class is unrelated to the presence (or absence) of any other feature, given the class
               variable. In spite of their naive design and apparently over-simplified assumptions, naive Bayes 
               classifiers have worked quite well in many complex real-world situations.</p><p>
               References:
               <ul><li>
                   Wikipedia contributors. "Naive Bayes classifier." Wikipedia, The Free Encyclopedia.
                   Wikipedia, The Free Encyclopedia, 16 Dec. 2011. Web. 5 Jan. 2012.</li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               In this example, we will be using a mixed-continuous version of the famous Play Tennis
               example by Tom Mitchell (1998). In Mitchell's example, one would like to infer if a person
               would play tennis or not based solely on four input variables. The original variables were
               categorical, but in this example, two of them will be categorical and two will be continuous.
               Rhe rows, or instances presented below represent days on which the behavior of the person
               has been registered and annotated, pretty much building our set of observation instances for
               learning:</p><div id="ID0EHCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EHCAAAAA_tabs"></div><div id="ID0EHCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EHCAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EHCAAAAA','5')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EHCAAAAA_copycode" href="javascript:CopyToClipboard('ID0EHCAAAAA','5')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EHCAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EHCAAAAA','5')" title="Print">Print</a></div></div><div id="ID0EHCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre style="white-space:pre-line;word-wrap:normal;">DataTable data = <span class="highlight-keyword">new</span> DataTable(<span class="highlight-literal">"Mitchell's Tennis Example"</span>);

data.Columns.Add(<span class="highlight-literal">"Day"</span>, <span class="highlight-literal">"Outlook"</span>, <span class="highlight-literal">"Temperature"</span>, <span class="highlight-literal">"Humidity"</span>, <span class="highlight-literal">"Wind"</span>, <span class="highlight-literal">"PlayTennis"</span>);

<span class="highlight-comment">// We will set Temperature and Humidity to be continuous</span>
data.Columns[<span class="highlight-literal">"Temperature"</span>].DataType = <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">double</span>); <span class="highlight-comment">// (degrees celsius)</span>
data.Columns[<span class="highlight-literal">"Humidity"</span>].DataType    = <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">double</span>); <span class="highlight-comment">// (water percentage)</span>

data.Rows.Add(   <span class="highlight-literal">"D1"</span>,   <span class="highlight-literal">"Sunny"</span>,      <span class="highlight-number">38.0</span>,         <span class="highlight-number">96.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"No"</span>  );
data.Rows.Add(   <span class="highlight-literal">"D2"</span>,   <span class="highlight-literal">"Sunny"</span>,      <span class="highlight-number">39.0</span>,         <span class="highlight-number">90.0</span>,   <span class="highlight-literal">"Strong"</span>,    <span class="highlight-literal">"No"</span>  );
data.Rows.Add(   <span class="highlight-literal">"D3"</span>,  <span class="highlight-literal">"Overcast"</span>,    <span class="highlight-number">38.0</span>,         <span class="highlight-number">75.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D4"</span>,   <span class="highlight-literal">"Rain"</span>,       <span class="highlight-number">25.0</span>,         <span class="highlight-number">87.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D5"</span>,   <span class="highlight-literal">"Rain"</span>,       <span class="highlight-number">12.0</span>,         <span class="highlight-number">30.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D6"</span>,   <span class="highlight-literal">"Rain"</span>,       <span class="highlight-number">11.0</span>,         <span class="highlight-number">35.0</span>,   <span class="highlight-literal">"Strong"</span>,    <span class="highlight-literal">"No"</span>  );
data.Rows.Add(   <span class="highlight-literal">"D7"</span>,  <span class="highlight-literal">"Overcast"</span>,    <span class="highlight-number">10.0</span>,         <span class="highlight-number">40.0</span>,   <span class="highlight-literal">"Strong"</span>,    <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D8"</span>,   <span class="highlight-literal">"Sunny"</span>,      <span class="highlight-number">24.0</span>,         <span class="highlight-number">90.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"No"</span>  );
data.Rows.Add(   <span class="highlight-literal">"D9"</span>,   <span class="highlight-literal">"Sunny"</span>,      <span class="highlight-number">12.0</span>,         <span class="highlight-number">26.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D10"</span>,  <span class="highlight-literal">"Rain"</span>,       <span class="highlight-number">25.0</span>,         <span class="highlight-number">30.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D11"</span>,  <span class="highlight-literal">"Sunny"</span>,      <span class="highlight-number">26.0</span>,         <span class="highlight-number">40.0</span>,   <span class="highlight-literal">"Strong"</span>,    <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D12"</span>, <span class="highlight-literal">"Overcast"</span>,    <span class="highlight-number">27.0</span>,         <span class="highlight-number">97.0</span>,   <span class="highlight-literal">"Strong"</span>,    <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D13"</span>, <span class="highlight-literal">"Overcast"</span>,    <span class="highlight-number">39.0</span>,         <span class="highlight-number">41.0</span>,    <span class="highlight-literal">"Weak"</span>,     <span class="highlight-literal">"Yes"</span> );
data.Rows.Add(   <span class="highlight-literal">"D14"</span>,  <span class="highlight-literal">"Rain"</span>,       <span class="highlight-number">23.0</span>,         <span class="highlight-number">98.0</span>,   <span class="highlight-literal">"Strong"</span>,    <span class="highlight-literal">"No"</span>  );</pre></div><div id="ID0EHCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>DataTable data = new DataTable("Mitchell's Tennis Example");

data.Columns.Add("Day", "Outlook", "Temperature", "Humidity", "Wind", "PlayTennis");

// We will set Temperature and Humidity to be continuous
data.Columns["Temperature"].DataType = typeof(double); // (degrees celsius)
data.Columns["Humidity"].DataType    = typeof(double); // (water percentage)

data.Rows.Add(   "D1",   "Sunny",      38.0,         96.0,    "Weak",     "No"  );
data.Rows.Add(   "D2",   "Sunny",      39.0,         90.0,   "Strong",    "No"  );
data.Rows.Add(   "D3",  "Overcast",    38.0,         75.0,    "Weak",     "Yes" );
data.Rows.Add(   "D4",   "Rain",       25.0,         87.0,    "Weak",     "Yes" );
data.Rows.Add(   "D5",   "Rain",       12.0,         30.0,    "Weak",     "Yes" );
data.Rows.Add(   "D6",   "Rain",       11.0,         35.0,   "Strong",    "No"  );
data.Rows.Add(   "D7",  "Overcast",    10.0,         40.0,   "Strong",    "Yes" );
data.Rows.Add(   "D8",   "Sunny",      24.0,         90.0,    "Weak",     "No"  );
data.Rows.Add(   "D9",   "Sunny",      12.0,         26.0,    "Weak",     "Yes" );
data.Rows.Add(   "D10",  "Rain",       25.0,         30.0,    "Weak",     "Yes" );
data.Rows.Add(   "D11",  "Sunny",      26.0,         40.0,   "Strong",    "Yes" );
data.Rows.Add(   "D12", "Overcast",    27.0,         97.0,   "Strong",    "Yes" );
data.Rows.Add(   "D13", "Overcast",    39.0,         41.0,    "Weak",     "Yes" );
data.Rows.Add(   "D14",  "Rain",       23.0,         98.0,   "Strong",    "No"  );</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EHCAAAAA');</script><p><i>Obs: The DataTable representation is not required, and instead the NaiveBayes could
               also be trained directly on double[] arrays containing the data.</i></p><p>
               In order to estimate a discrete Naive Bayes, we will first convert this problem to a more simpler
               representation. Since some variables are categories, it does not matter if they are represented
               as strings, or numbers, since both are just symbols for the event they represent. Since numbers
               are more easily representable than text strings, we will convert the problem to use a discrete 
               alphabet through the use of a <a href="T_Accord_Statistics_Filters_Codification.htm" target="">codebook</a>.</p><p>
               A codebook effectively transforms any distinct possible value for a variable into an integer 
               symbol. For example, “Sunny” could as well be represented by the integer label 0, “Overcast” 
               by “1”, Rain by “2”, and the same goes by for the other variables. So:</p><div id="ID0EDCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDCAAAAA_tabs"></div><div id="ID0EDCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDCAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EDCAAAAA','5')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDCAAAAA_copycode" href="javascript:CopyToClipboard('ID0EDCAAAAA','5')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDCAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EDCAAAAA','5')" title="Print">Print</a></div></div><div id="ID0EDCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre style="white-space:pre-line;word-wrap:normal;"><span class="highlight-comment">// Create a new codification codebook to </span> 
<span class="highlight-comment">// convert strings into integer symbols</span>
Codification codebook = <span class="highlight-keyword">new</span> Codification(data);

<span class="highlight-comment">// Translate our training data into integer symbols using our codebook:</span>
DataTable symbols = codebook.Apply(data); 
<span class="highlight-keyword">double</span>[][] inputs  = symbols.ToArray(<span class="highlight-literal">"Outlook"</span>, <span class="highlight-literal">"Temperature"</span>, <span class="highlight-literal">"Humidity"</span>, <span class="highlight-literal">"Wind"</span>); 
<span class="highlight-keyword">int</span>[]      outputs = symbols.ToIntArray(<span class="highlight-literal">"PlayTennis"</span>).GetColumn(<span class="highlight-number">0</span>);</pre></div><div id="ID0EDCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Create a new codification codebook to  
// convert strings into integer symbols
Codification codebook = new Codification(data);

// Translate our training data into integer symbols using our codebook:
DataTable symbols = codebook.Apply(data); 
double[][] inputs  = symbols.ToArray("Outlook", "Temperature", "Humidity", "Wind"); 
int[]      outputs = symbols.ToIntArray("PlayTennis").GetColumn(0);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDCAAAAA');</script><p>
               Now that we already have our learning input/ouput pairs, we should specify our
               decision tree. We will be trying to build a tree to predict the last column, entitled
               “PlayTennis”. For this, we will be using the “Outlook”, “Temperature”, “Humidity” and
               “Wind” as predictors (variables which will we will use for our decision).
             </p><div id="ID0EBCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBCAAAAA_tabs"></div><div id="ID0EBCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBCAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EBCAAAAA','5')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EBCAAAAA_copycode" href="javascript:CopyToClipboard('ID0EBCAAAAA','5')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBCAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EBCAAAAA','5')" title="Print">Print</a></div></div><div id="ID0EBCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre style="white-space:pre-line;word-wrap:normal;"><span class="highlight-comment">// Gather information about decision variables</span>
IUnivariateDistribution[] priors =
{
    <span class="highlight-keyword">new</span> GeneralDiscreteDistribution(codebook[<span class="highlight-literal">"Outlook"</span>].Symbols),   <span class="highlight-comment">// 3 possible values (Sunny, overcast, rain)</span> 
    <span class="highlight-keyword">new</span> NormalDistribution(),                                       <span class="highlight-comment">// Continuous value (celsius)</span> 
    <span class="highlight-keyword">new</span> NormalDistribution(),                                       <span class="highlight-comment">// Continuous value (percentage)</span> 
    <span class="highlight-keyword">new</span> GeneralDiscreteDistribution(codebook[<span class="highlight-literal">"Wind"</span>].Symbols)       <span class="highlight-comment">// 2 possible values (Weak, strong)</span>
};

<span class="highlight-keyword">int</span> inputCount = <span class="highlight-number">4</span>;       <span class="highlight-comment">// 4 variables (Outlook, Temperature, Humidity, Wind)</span> 
<span class="highlight-keyword">int</span> classCount = codebook[<span class="highlight-literal">"PlayTennis"</span>].Symbols; <span class="highlight-comment">// 2 possible values (yes, no)</span> 

<span class="highlight-comment">// Create a new Naive Bayes classifiers for the two classes</span> 
<span class="highlight-keyword">var</span> target = <span class="highlight-keyword">new</span> NaiveBayes&lt;IUnivariateDistribution&gt;(classCount, inputCount, priors);

<span class="highlight-comment">// Compute the Naive Bayes model</span>
target.Estimate(inputs, outputs);</pre></div><div id="ID0EBCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Gather information about decision variables
IUnivariateDistribution[] priors =
{
    new GeneralDiscreteDistribution(codebook["Outlook"].Symbols),   // 3 possible values (Sunny, overcast, rain) 
    new NormalDistribution(),                                       // Continuous value (celsius) 
    new NormalDistribution(),                                       // Continuous value (percentage) 
    new GeneralDiscreteDistribution(codebook["Wind"].Symbols)       // 2 possible values (Weak, strong)
};

int inputCount = 4;       // 4 variables (Outlook, Temperature, Humidity, Wind) 
int classCount = codebook["PlayTennis"].Symbols; // 2 possible values (yes, no) 

// Create a new Naive Bayes classifiers for the two classes 
var target = new NaiveBayes&lt;IUnivariateDistribution&gt;(classCount, inputCount, priors);

// Compute the Naive Bayes model
target.Estimate(inputs, outputs);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBCAAAAA');</script><p>Now that we have created and estimated our classifier, we 
             can query the classifier for new input samples through the <a href="M_Accord_MachineLearning_Bayes_NaiveBayes_1_Compute.htm" target="">Compute(<span id="ID0EDBACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBACAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>Double<span id="ID0EBBACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBACAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script>)</a> method.</p><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_Bayes_NaiveBayes_1.htm" target="">NaiveBayes<span id="ID0EDACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDACAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TDistribution<span id="ID0EBACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBACAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_Bayes.htm" target="">Accord.MachineLearning.Bayes Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_Bayes_NaiveBayes.htm" target="">Accord.MachineLearning.Bayes<span id="ID0EBAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAAAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NaiveBayes</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2012. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+NaiveBayes(TDistribution)+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>