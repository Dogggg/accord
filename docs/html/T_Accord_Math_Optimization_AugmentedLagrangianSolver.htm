<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>AugmentedLagrangianSolver Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="AugmentedLagrangianSolver class" />
    <meta name="System.Keywords" content="Accord.Math.Optimization.AugmentedLagrangianSolver class" />
    <meta name="System.Keywords" content="AugmentedLagrangianSolver class, about AugmentedLagrangianSolver class" />
    <meta name="Microsoft.Help.F1" content="Accord.Math.Optimization.AugmentedLagrangianSolver" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Math.Optimization.AugmentedLagrangianSolver" />
    <meta name="Description" content="Augmented Lagrangiam method for constrained non-linear optimization." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.Math.Optimization" />
    <meta name="file" content="T_Accord_Math_Optimization_AugmentedLagrangianSolver" />
    <meta name="guid" content="T_Accord_Math_Optimization_AugmentedLagrangianSolver" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">AugmentedLagrangianSolver Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               Augmented Lagrangiam method for constrained non-linear optimization.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.Math.Optimization<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>AugmentedLagrangianSolver</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_Math_Optimization.htm" target="">Accord.Math.Optimization</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Math</span> (in Accord.Math.dll) Version: 2.9.0.0 (2.9.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">AugmentedLagrangianSolver</span></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public class AugmentedLagrangianSolver</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               References:
               <ul><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://ab-initio.mit.edu/nlopt" target="_blank">
                   Steven G. Johnson, The NLopt nonlinear-optimization package, http://ab-initio.mit.edu/nlopt </a></li><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.72.6121" target="_blank">
                   E. G. Birgin and J. M. Martinez, "Improving ultimate convergence of an augmented Lagrangian
                   method," Optimization Methods and Software vol. 23, no. 2, p. 177-195 (2008). </a></li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               In this framework, it is possible to state a non-linear programming problem
               using either symbolic processing or vector-valued functions. The following 
               example demonstrates the former.</p><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Suppose we would like to minimize the following function:</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">//    f(x,y) = min 100(y-x²)²+(1-x)²</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">// Subject to the constraints</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">//    x &gt;= 0  (x must be positive)</span> 
<span class="highlight-comment">//    y &gt;= 0  (y must be positive)</span> 
<span class="highlight-comment">// </span> 

<span class="highlight-comment">// In this example we will be using some symbolic processing. </span> 
<span class="highlight-comment">// The following variables could be inicialized to any value.</span> 

<span class="highlight-keyword">double</span> x = <span class="highlight-number">0</span>, y = <span class="highlight-number">0</span>;


<span class="highlight-comment">// First, we create our objective function</span> 
<span class="highlight-keyword">var</span> f = <span class="highlight-keyword">new</span> NonlinearObjectiveFunction(

    <span class="highlight-comment">// This is the objective function:  f(x,y) = min 100(y-x²)²+(1-x)²</span>
    function: () =&gt; <span class="highlight-number">100</span> * Math.Pow(y - x * x, <span class="highlight-number">2</span>) + Math.Pow(<span class="highlight-number">1</span> - x, <span class="highlight-number">2</span>),

    <span class="highlight-comment">// The gradient vector:</span>
    gradient: () =&gt; <span class="highlight-keyword">new</span>[] 
    {
        <span class="highlight-number">2</span> * (<span class="highlight-number">200</span> * Math.Pow(x, <span class="highlight-number">3</span>) - <span class="highlight-number">200</span> * x * y + x - <span class="highlight-number">1</span>), <span class="highlight-comment">// df/dx = 2(200x³-200xy+x-1)</span> 
        <span class="highlight-number">200</span> * (y - x*x)                                   <span class="highlight-comment">// df/dy = 200(y-x²)</span>
    }

);


<span class="highlight-comment">// Now we can start stating the constraints</span> 
<span class="highlight-keyword">var</span> constraints = <span class="highlight-keyword">new</span> List&lt;NonlinearConstraint&gt;();

<span class="highlight-comment">// Add the non-negativity constraint for x</span>
constraints.Add(<span class="highlight-keyword">new</span> NonlinearConstraint(f,

    <span class="highlight-comment">// 1st contraint: x should be greater than or equal to 0</span>
    function: () =&gt; x, shouldBe: ConstraintType.GreaterThanOrEqualTo, <span class="highlight-keyword">value</span>: <span class="highlight-number">0</span>,

    gradient: () =&gt; <span class="highlight-keyword">new</span>[] { <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span> }
));

<span class="highlight-comment">// Add the non-negativity constraint for y</span>
constraints.Add(<span class="highlight-keyword">new</span> NonlinearConstraint(f,

    <span class="highlight-comment">// 2nd constraint: y should be greater than or equal to 0</span>
    function: () =&gt; y, shouldBe: ConstraintType.GreaterThanOrEqualTo, <span class="highlight-keyword">value</span>: <span class="highlight-number">0</span>,

    gradient: () =&gt; <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span> }
));


<span class="highlight-comment">// Finally, we create the non-linear programming solver</span> 
<span class="highlight-keyword">var</span> solver = <span class="highlight-keyword">new</span> AugmentedLagrangianSolver(<span class="highlight-number">2</span>, constraints);

<span class="highlight-comment">// And attempt to solve the problem</span> 
<span class="highlight-keyword">double</span> minValue = solver.Minimize(f);</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Suppose we would like to minimize the following function: 
//  
//    f(x,y) = min 100(y-x²)²+(1-x)² 
//  
// Subject to the constraints 
//  
//    x &gt;= 0  (x must be positive) 
//    y &gt;= 0  (y must be positive) 
//  

// In this example we will be using some symbolic processing.  
// The following variables could be inicialized to any value. 

double x = 0, y = 0;


// First, we create our objective function 
var f = new NonlinearObjectiveFunction(

    // This is the objective function:  f(x,y) = min 100(y-x²)²+(1-x)²
    function: () =&gt; 100 * Math.Pow(y - x * x, 2) + Math.Pow(1 - x, 2),

    // The gradient vector:
    gradient: () =&gt; new[] 
    {
        2 * (200 * Math.Pow(x, 3) - 200 * x * y + x - 1), // df/dx = 2(200x³-200xy+x-1) 
        200 * (y - x*x)                                   // df/dy = 200(y-x²)
    }

);


// Now we can start stating the constraints 
var constraints = new List&lt;NonlinearConstraint&gt;();

// Add the non-negativity constraint for x
constraints.Add(new NonlinearConstraint(f,

    // 1st contraint: x should be greater than or equal to 0
    function: () =&gt; x, shouldBe: ConstraintType.GreaterThanOrEqualTo, value: 0,

    gradient: () =&gt; new[] { 1.0, 0.0 }
));

// Add the non-negativity constraint for y
constraints.Add(new NonlinearConstraint(f,

    // 2nd constraint: y should be greater than or equal to 0
    function: () =&gt; y, shouldBe: ConstraintType.GreaterThanOrEqualTo, value: 0,

    gradient: () =&gt; new[] { 0.0, 1.0 }
));


// Finally, we create the non-linear programming solver 
var solver = new AugmentedLagrangianSolver(2, constraints);

// And attempt to solve the problem 
double minValue = solver.Minimize(f);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Math_Optimization_AugmentedLagrangianSolver.htm" target="">AugmentedLagrangianSolver Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Math_Optimization.htm" target="">Accord.Math.Optimization Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+AugmentedLagrangianSolver+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>