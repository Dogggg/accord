<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>MeanShift Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="MeanShift class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.MeanShift class" />
    <meta name="System.Keywords" content="MeanShift class, about MeanShift class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.MeanShift" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.MeanShift" />
    <meta name="Description" content="Mean shift clustering algorithm." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning" />
    <meta name="file" content="T_Accord_MachineLearning_MeanShift" />
    <meta name="guid" content="T_Accord_MachineLearning_MeanShift" />
    
    <link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">MeanShift Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord-net.github.io/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
              Mean shift clustering algorithm.
            </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MeanShift</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning.htm" target="">Accord.MachineLearning</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.10.0.0 (2.10.0.4632)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MeanShift</span> : <span class="identifier">IClusteringAlgorithm</span>&lt;<span class="identifier">double</span>[]&gt;</pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class MeanShift : IClusteringAlgorithm&lt;double[]&gt;</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              Mean shift is a non-parametric feature-space analysis technique originally 
              presented in 1975 by Fukunaga and Hostetler. It is a procedure for locating
              the maxima of a density function given discrete data sampled from that function.
              The method iteratively seeks the location of the modes of the distribution using
              local updates. </p><p>
              As it is, the method would be intractable; however, some clever optimizations such as
              the use of appropriate data structures and seeding strategies as shown in Lee (2011)
              and Carreira-Perpinan (2006) can improve its computational speed.</p><p>
              References:
              <ul><li>
                  Wikipedia, The Free Encyclopedia. Mean-shift. Available on:
                  http://en.wikipedia.org/wiki/Mean-shift </li><li>
                  Comaniciu, Dorin, and Peter Meer. "Mean shift: A robust approach toward 
                  feature space analysis." Pattern Analysis and Machine Intelligence, IEEE 
                  Transactions on 24.5 (2002): 603-619. Available at:
                  http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1000236 </li><li>
                  Conrad Lee. Scalable mean-shift clustering in a few lines of python. The
                  Sociograph blog, 2011. Available at: 
                  http://sociograph.blogspot.com.br/2011/11/scalable-mean-shift-clustering-in-few.html </li><li>
                  Carreira-Perpinan, Miguel A. "Acceleration strategies for Gaussian mean-shift image
                  segmentation." Computer Vision and Pattern Recognition, 2006 IEEE Computer Society 
                  Conference on. Vol. 1. IEEE, 2006. Available at:
                  http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=1640881
                </li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="ID0EGCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EGCAAAAA_tabs"></div><div id="ID0EGCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EGCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EGCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EGCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EGCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EGCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EGCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EGCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Declare some observations</span> 
<span class="highlight-keyword">double</span>[][] observations = 
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-5</span>, <span class="highlight-number">-2</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-5</span>, <span class="highlight-number">-5</span>, <span class="highlight-number">-6</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">2</span>,  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span>,  <span class="highlight-number">2</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">2</span>,  <span class="highlight-number">2</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">3</span>,  <span class="highlight-number">1</span>,  <span class="highlight-number">2</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">11</span>,  <span class="highlight-number">5</span>,  <span class="highlight-number">4</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">15</span>,  <span class="highlight-number">5</span>,  <span class="highlight-number">6</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">10</span>,  <span class="highlight-number">5</span>,  <span class="highlight-number">6</span> },
};

<span class="highlight-comment">// Create a uniform kernel density function</span>
UniformKernel kernel = <span class="highlight-keyword">new</span> UniformKernel();

<span class="highlight-comment">// Create a new Mean-Shift algorithm for 3 dimensional samples</span>
MeanShift meanShift = <span class="highlight-keyword">new</span> MeanShift(dimension: <span class="highlight-number">3</span>, kernel: kernel, bandwidth: <span class="highlight-number">1.5</span> );

<span class="highlight-comment">// Compute the algorithm, retrieving an integer array</span> 
<span class="highlight-comment">//  containing the labels for each of the observations</span> 
<span class="highlight-keyword">int</span>[] labels = meanShift.Compute(observations);

<span class="highlight-comment">// As a result, the first two observations should belong to the</span> 
<span class="highlight-comment">//  same cluster (thus having the same label). The same should</span> 
<span class="highlight-comment">//  happen to the next four observations and to the last three.</span></pre></div><div id="ID0EGCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Declare some observations 
double[][] observations = 
{
    new double[] { -5, -2, -1 },
    new double[] { -5, -5, -6 },
    new double[] {  2,  1,  1 },
    new double[] {  1,  1,  2 },
    new double[] {  1,  2,  2 },
    new double[] {  3,  1,  2 },
    new double[] { 11,  5,  4 },
    new double[] { 15,  5,  6 },
    new double[] { 10,  5,  6 },
};

// Create a uniform kernel density function
UniformKernel kernel = new UniformKernel();

// Create a new Mean-Shift algorithm for 3 dimensional samples
MeanShift meanShift = new MeanShift(dimension: 3, kernel: kernel, bandwidth: 1.5 );

// Compute the algorithm, retrieving an integer array 
//  containing the labels for each of the observations 
int[] labels = meanShift.Compute(observations);

// As a result, the first two observations should belong to the 
//  same cluster (thus having the same label). The same should 
//  happen to the next four observations and to the last three.</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EGCAAAAA');</script><p>
              The following example demonstrates how to use the Mean Shift algorithm
              for color clustering. It is the same code which can be found in the
              <a href="" target="">color clustering sample application</a>.</p><div id="ID0EECAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EECAAAAA_tabs"></div><div id="ID0EECAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EECAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EECAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EECAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EECAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EECAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EECAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EECAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">int</span> pixelSize = <span class="highlight-number">3</span>;   <span class="highlight-comment">// RGB color pixel</span> 
<span class="highlight-keyword">double</span> sigma = <span class="highlight-number">0.06</span>; <span class="highlight-comment">// kernel bandwith</span> 

<span class="highlight-comment">// Load a test image (shown below)</span>
Bitmap image = ...

<span class="highlight-comment">// Create conversors</span>
ImageToArray imageToArray = <span class="highlight-keyword">new</span> ImageToArray(min: <span class="highlight-number">-1</span>, max: <span class="highlight-number">+1</span>);
ArrayToImage arrayToImage = <span class="highlight-keyword">new</span> ArrayToImage(image.Width, image.Height, min: <span class="highlight-number">-1</span>, max: <span class="highlight-number">+1</span>);

<span class="highlight-comment">// Transform the image into an array of pixel values</span> 
<span class="highlight-keyword">double</span>[][] pixels; imageToArray.Convert(image, <span class="highlight-keyword">out</span> pixels);

<span class="highlight-comment">// Create a MeanShift algorithm using given bandwidth</span> 
<span class="highlight-comment">//   and a Gaussian density kernel as kernel function.</span>
MeanShift meanShift = <span class="highlight-keyword">new</span> MeanShift(pixelSize, <span class="highlight-keyword">new</span> GaussianKernel(<span class="highlight-number">3</span>), sigma);


<span class="highlight-comment">// Compute the mean-shift algorithm until the difference in</span> 
<span class="highlight-comment">//  shifting means between two iterations is below 0.05</span> 
<span class="highlight-keyword">int</span>[] idx = meanShift.Compute(pixels, <span class="highlight-number">0.05</span>, maxIterations: <span class="highlight-number">10</span>);


<span class="highlight-comment">// Replace every pixel with its corresponding centroid</span>
pixels.ApplyInPlace((x, i) =&gt; meanShift.Clusters.Modes[idx[i]]);

<span class="highlight-comment">// Retrieve the resulting image in a picture box</span>
Bitmap result; arrayToImage.Convert(pixels, <span class="highlight-keyword">out</span> result);</pre></div><div id="ID0EECAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>int pixelSize = 3;   // RGB color pixel 
double sigma = 0.06; // kernel bandwith 

// Load a test image (shown below)
Bitmap image = ...

// Create conversors
ImageToArray imageToArray = new ImageToArray(min: -1, max: +1);
ArrayToImage arrayToImage = new ArrayToImage(image.Width, image.Height, min: -1, max: +1);

// Transform the image into an array of pixel values 
double[][] pixels; imageToArray.Convert(image, out pixels);

// Create a MeanShift algorithm using given bandwidth 
//   and a Gaussian density kernel as kernel function.
MeanShift meanShift = new MeanShift(pixelSize, new GaussianKernel(3), sigma);


// Compute the mean-shift algorithm until the difference in 
//  shifting means between two iterations is below 0.05 
int[] idx = meanShift.Compute(pixels, 0.05, maxIterations: 10);


// Replace every pixel with its corresponding centroid
pixels.ApplyInPlace((x, i) =&gt; meanShift.Clusters.Modes[idx[i]]);

// Retrieve the resulting image in a picture box
Bitmap result; arrayToImage.Convert(pixels, out result);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EECAAAAA');</script><p>
              The original image is shown below:</p><img src="./../images/mean-shift-start.png" /><p>
              The resulting image will be:</p><img src="./../images/mean-shift-end.png" /><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_MeanShift.htm" target="">MeanShift Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning.htm" target="">Accord.MachineLearning Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord-net.github.io/" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+MeanShift+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>