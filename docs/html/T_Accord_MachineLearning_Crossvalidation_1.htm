<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>CrossValidation(TModel) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="CrossValidation%3CTModel%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.CrossValidation%3CTModel%3E class" />
    <meta name="System.Keywords" content="CrossValidation%3CTModel%3E class, about CrossValidation%3CTModel%3E class" />
    <meta name="System.Keywords" content="CrossValidation(Of TModel) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.CrossValidation(Of TModel) class" />
    <meta name="System.Keywords" content="CrossValidation(Of TModel) class, about CrossValidation(Of TModel) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.CrossValidation`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.CrossValidation`1" />
    <meta name="Description" content="k-Fold cross-validation." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning" />
    <meta name="file" content="T_Accord_MachineLearning_CrossValidation_1" />
    <meta name="guid" content="T_Accord_MachineLearning_CrossValidation_1" />
    
    <link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">CrossValidation<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TModel</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord-net.github.io/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               k-Fold cross-validation.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBHOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBHOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning<span id="ID0EEEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CrossValidation<span id="ID0ECEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECEOAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TModel<span id="ID0EAEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAEOAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></span><br />    <a href="T_Accord_MachineLearning_CrossValidation.htm" target="">Accord.MachineLearning<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CrossValidation</a><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning.htm" target="">Accord.MachineLearning</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.10.0.0 (2.10.0.4632)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EABEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EABEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EABEAAAAA_tabimgleft"></div><div id="ID0EABEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EABEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EABEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EABEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EABEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EABEAAAAA_tabimgright"></div></div><div id="ID0EABEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EABEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EABEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EABEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EABEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EABEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EABEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EABEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">CrossValidation</span>&lt;TModel&gt;
<span class="keyword">where</span> TModel : <span class="keyword">class</span></pre></div><div id="ID0EABEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class CrossValidation&lt;TModel&gt;
where TModel : class</pre></div><div id="ID0EABEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EABEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EABEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">TModel</span></dt><dd>The type of the model being analysed.</dd></dl><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               Cross-validation is a technique for estimating the performance of a predictive
               model. It can be used to measure how the results of a statistical analysis will
               generalize to an independent data set. It is mainly used in settings where the
               goal is prediction, and one wants to estimate how accurately a predictive model
               will perform in practice.</p><p>
               One round of cross-validation involves partitioning a sample of data into
               complementary subsets, performing the analysis on one subset (called the
               training set), and validating the analysis on the other subset (called the
               validation set or testing set). To reduce variability, multiple rounds of 
               cross-validation are performed using different partitions, and the validation 
               results are averaged over the rounds.</p><p>
               References:
               <ul><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://en.wikipedia.org/wiki/Cross-validation_(statistics)" target="_blank">
                   Wikipedia, The Free Encyclopedia. Cross-validation (statistics). Available on:
                   http://en.wikipedia.org/wiki/Cross-validation_(statistics) </a></li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// This is a sample code on how to use Cross-Validation</span> 
<span class="highlight-comment">// to access the performance of Support Vector Machines.</span> 

<span class="highlight-comment">// Consider the example binary data. We will be trying</span> 
<span class="highlight-comment">// to learn a XOR problem and see how well does SVMs</span> 
<span class="highlight-comment">// perform on this data.</span> 

<span class="highlight-keyword">double</span>[][] data =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>,  <span class="highlight-number">1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>,  <span class="highlight-number">1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>,  <span class="highlight-number">1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-1</span>,  <span class="highlight-number">1</span> }, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span> },
};

<span class="highlight-keyword">int</span>[] xor = <span class="highlight-comment">// result of xor for the sample input data</span>
{
    <span class="highlight-number">-1</span>,       <span class="highlight-number">1</span>,
     <span class="highlight-number">1</span>,      <span class="highlight-number">-1</span>,
    <span class="highlight-number">-1</span>,       <span class="highlight-number">1</span>,
     <span class="highlight-number">1</span>,      <span class="highlight-number">-1</span>,
    <span class="highlight-number">-1</span>,       <span class="highlight-number">1</span>,
     <span class="highlight-number">1</span>,      <span class="highlight-number">-1</span>,
    <span class="highlight-number">-1</span>,       <span class="highlight-number">1</span>,
     <span class="highlight-number">1</span>,      <span class="highlight-number">-1</span>,
};


<span class="highlight-comment">// Create a new Cross-validation algorithm passing the data set size and the number of folds</span> 
<span class="highlight-keyword">var</span> crossvalidation = <span class="highlight-keyword">new</span> CrossValidation&lt;KernelSupportVectorMachine&gt;(size: data.Length, folds: <span class="highlight-number">3</span>);

<span class="highlight-comment">// Define a fitting function using Support Vector Machines. The objective of this</span> 
<span class="highlight-comment">// function is to learn a SVM in the subset of the data dicted by cross-validation.</span>

crossvalidation.Fitting = <span class="highlight-keyword">delegate</span>(<span class="highlight-keyword">int</span> k, <span class="highlight-keyword">int</span>[] indicesTrain, <span class="highlight-keyword">int</span>[] indicesValidation)
{
    <span class="highlight-comment">// The fitting function is passing the indices of the original set which</span> 
    <span class="highlight-comment">// should be considered training data and the indices of the original set</span> 
    <span class="highlight-comment">// which should be considered validation data.</span> 

    <span class="highlight-comment">// Lets now grab the training data:</span> 
    <span class="highlight-keyword">var</span> trainingInputs = data.Submatrix(indicesTrain);
    <span class="highlight-keyword">var</span> trainingOutputs = xor.Submatrix(indicesTrain);

    <span class="highlight-comment">// And now the validation data:</span> 
    <span class="highlight-keyword">var</span> validationInputs = data.Submatrix(indicesValidation);
    <span class="highlight-keyword">var</span> validationOutputs = xor.Submatrix(indicesValidation);


    <span class="highlight-comment">// Create a Kernel Support Vector Machine to operate on the set</span> 
    <span class="highlight-keyword">var</span> svm = <span class="highlight-keyword">new</span> KernelSupportVectorMachine(<span class="highlight-keyword">new</span> Polynomial(<span class="highlight-number">2</span>), <span class="highlight-number">2</span>);

    <span class="highlight-comment">// Create a training algorithm and learn the training data</span> 
    <span class="highlight-keyword">var</span> smo = <span class="highlight-keyword">new</span> SequentialMinimalOptimization(svm, trainingInputs, trainingOutputs);

    <span class="highlight-keyword">double</span> trainingError = smo.Run();

    <span class="highlight-comment">// Now we can compute the validation error on the validation data:</span> 
    <span class="highlight-keyword">double</span> validationError = smo.ComputeError(validationInputs, validationOutputs);

    <span class="highlight-comment">// Return a new information structure containing the model and the errors achieved.</span> 
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> CrossValidationValues&lt;KernelSupportVectorMachine&gt;(svm, trainingError, validationError);
};


<span class="highlight-comment">// Compute the cross-validation</span> 
<span class="highlight-keyword">var</span> result = crossvalidation.Compute();

<span class="highlight-comment">// Finally, access the measured performance.</span> 
<span class="highlight-keyword">double</span> trainingErrors = result.Training.Mean;
<span class="highlight-keyword">double</span> validationErrors = result.Validation.Mean;</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// This is a sample code on how to use Cross-Validation 
// to access the performance of Support Vector Machines. 

// Consider the example binary data. We will be trying 
// to learn a XOR problem and see how well does SVMs 
// perform on this data. 

double[][] data =
{
    new double[] { -1, -1 }, new double[] {  1, -1 },
    new double[] { -1,  1 }, new double[] {  1,  1 },
    new double[] { -1, -1 }, new double[] {  1, -1 },
    new double[] { -1,  1 }, new double[] {  1,  1 },
    new double[] { -1, -1 }, new double[] {  1, -1 },
    new double[] { -1,  1 }, new double[] {  1,  1 },
    new double[] { -1, -1 }, new double[] {  1, -1 },
    new double[] { -1,  1 }, new double[] {  1,  1 },
};

int[] xor = // result of xor for the sample input data
{
    -1,       1,
     1,      -1,
    -1,       1,
     1,      -1,
    -1,       1,
     1,      -1,
    -1,       1,
     1,      -1,
};


// Create a new Cross-validation algorithm passing the data set size and the number of folds 
var crossvalidation = new CrossValidation&lt;KernelSupportVectorMachine&gt;(size: data.Length, folds: 3);

// Define a fitting function using Support Vector Machines. The objective of this 
// function is to learn a SVM in the subset of the data dicted by cross-validation.

crossvalidation.Fitting = delegate(int k, int[] indicesTrain, int[] indicesValidation)
{
    // The fitting function is passing the indices of the original set which 
    // should be considered training data and the indices of the original set 
    // which should be considered validation data. 

    // Lets now grab the training data: 
    var trainingInputs = data.Submatrix(indicesTrain);
    var trainingOutputs = xor.Submatrix(indicesTrain);

    // And now the validation data: 
    var validationInputs = data.Submatrix(indicesValidation);
    var validationOutputs = xor.Submatrix(indicesValidation);


    // Create a Kernel Support Vector Machine to operate on the set 
    var svm = new KernelSupportVectorMachine(new Polynomial(2), 2);

    // Create a training algorithm and learn the training data 
    var smo = new SequentialMinimalOptimization(svm, trainingInputs, trainingOutputs);

    double trainingError = smo.Run();

    // Now we can compute the validation error on the validation data: 
    double validationError = smo.ComputeError(validationInputs, validationOutputs);

    // Return a new information structure containing the model and the errors achieved. 
    return new CrossValidationValues&lt;KernelSupportVectorMachine&gt;(svm, trainingError, validationError);
};


// Compute the cross-validation 
var result = crossvalidation.Compute();

// Finally, access the measured performance. 
double trainingErrors = result.Training.Mean;
double validationErrors = result.Validation.Mean;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_CrossValidation_1.htm" target="">CrossValidation<span id="ID0EDABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>TModel<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning.htm" target="">Accord.MachineLearning Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord-net.github.io/" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+CrossValidation(TModel)+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>