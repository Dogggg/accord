<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>BroydenFletcherGoldfarbShanno Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="BroydenFletcherGoldfarbShanno class" />
    <meta name="System.Keywords" content="Accord.Math.Optimization.BroydenFletcherGoldfarbShanno class" />
    <meta name="System.Keywords" content="BroydenFletcherGoldfarbShanno class, about BroydenFletcherGoldfarbShanno class" />
    <meta name="Microsoft.Help.F1" content="Accord.Math.Optimization.BroydenFletcherGoldfarbShanno" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Math.Optimization.BroydenFletcherGoldfarbShanno" />
    <meta name="Description" content="Limited-memory Broyden–Fletcher–Goldfarb–Shanno (L-BFGS) optimization method." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.Math.Optimization" />
    <meta name="file" content="T_Accord_Math_Optimization_BroydenFletcherGoldfarbShanno" />
    <meta name="guid" content="T_Accord_Math_Optimization_BroydenFletcherGoldfarbShanno" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">BroydenFletcherGoldfarbShanno Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
              Limited-memory Broyden–Fletcher–Goldfarb–Shanno (L-BFGS) optimization method.
            </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.Math.Optimization<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>BroydenFletcherGoldfarbShanno</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_Math_Optimization.htm" target="">Accord.Math.Optimization</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Math</span> (in Accord.Math.dll) Version: 2.8.2.0 (2.8.2.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BroydenFletcherGoldfarbShanno</span> : <a href="T_Accord_Math_Optimization_IOptimizationMethod.htm">IOptimizationMethod</a></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public class BroydenFletcherGoldfarbShanno : IOptimizationMethod</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              The L-BFGS algorithm is a member of the broad family of quasi-Newton optimization
              methods. L-BFGS stands for 'Limited memory BFGS'. Indeed, L-BFGS uses a limited
              memory variation of the Broyden–Fletcher–Goldfarb–Shanno (BFGS) update to approximate
              the inverse Hessian matrix (denoted by Hk). Unlike the original BFGS method which
              stores a dense  approximation, L-BFGS stores only a few vectors that represent the
              approximation implicitly. Due to its moderate memory requirement, L-BFGS method is
              particularly well suited for optimization problems with a large number of variables.</p><p>
              L-BFGS never explicitly forms or stores Hk. Instead, it maintains a history of the past
              <span class="code">m</span> updates of the position <span class="code">x</span> and gradient <span class="code">g</span>, where generally the history
              <span class="code">m</span>can be short, often less than 10. These updates are used to implicitly do operations
              requiring the Hk-vector product.</p><p>
              The framework implementation of this method is based on the original FORTRAN source code
              by Jorge Nocedal (see references below). The original FORTRAN source code of LBFGS (for
              unconstrained problems) is available at http://www.netlib.org/opt/lbfgs_um.shar and had
              been made available under the public domain. </p><p>
              References:
              <ul><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://www.netlib.org/opt/lbfgs_um.shar" target="_blank">
                   Jorge Nocedal. Limited memory BFGS method for large scale optimization (Fortran source code). 1990.
                   Available in http://www.netlib.org/opt/lbfgs_um.shar </a></li><li>
                   Jorge Nocedal. Updating Quasi-Newton Matrices with Limited Storage. <i>Mathematics of Computation</i>,
                   Vol. 35, No. 151, pp. 773--782, 1980.</li><li>
                   Dong C. Liu, Jorge Nocedal. On the limited memory BFGS method for large scale optimization.</li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              The following example shows the basic usage of the L-BFGS solver
              to find the minimum of a function specifying its function and
              gradient. </p><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Suppose we would like to find the minimum of the function</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">//   f(x,y)  =  -exp{-(x-1)²} - exp{-(y-2)²/2}</span> 
<span class="highlight-comment">// </span> 

<span class="highlight-comment">// First we need write down the function either as a named</span> 
<span class="highlight-comment">// method, an anonymous method or as a lambda function:</span>

Func&lt;<span class="highlight-keyword">double</span>[], <span class="highlight-keyword">double</span>&gt; f = (x) =&gt;
    -Math.Exp(-Math.Pow(x[<span class="highlight-number">0</span>] - <span class="highlight-number">1</span>, <span class="highlight-number">2</span>)) - Math.Exp(<span class="highlight-number">-0.5</span> * Math.Pow(x[<span class="highlight-number">1</span>] - <span class="highlight-number">2</span>, <span class="highlight-number">2</span>));

<span class="highlight-comment">// Now, we need to write its gradient, which is just the</span> 
<span class="highlight-comment">// vector of first partial derivatives del_f / del_x, as:</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">//   g(x,y)  =  { del f / del x, del f / del y }</span> 
<span class="highlight-comment">// </span>

Func&lt;<span class="highlight-keyword">double</span>[], <span class="highlight-keyword">double</span>[]&gt; g = (x) =&gt; <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] 
{
    <span class="highlight-comment">// df/dx = {-2 e^(-    (x-1)^2) (x-1)}</span> 
    <span class="highlight-number">2</span> * Math.Exp(-Math.Pow(x[<span class="highlight-number">0</span>] - <span class="highlight-number">1</span>, <span class="highlight-number">2</span>)) * (x[<span class="highlight-number">0</span>] - <span class="highlight-number">1</span>),

    <span class="highlight-comment">// df/dy = {-  e^(-1/2 (y-2)^2) (y-2)}</span>
    Math.Exp(<span class="highlight-number">-0.5</span> * Math.Pow(x[<span class="highlight-number">1</span>] - <span class="highlight-number">2</span>, <span class="highlight-number">2</span>)) * (x[<span class="highlight-number">1</span>] - <span class="highlight-number">2</span>)
};

<span class="highlight-comment">// Finally, we can create the L-BFGS solver, passing the functions as arguments</span> 
<span class="highlight-keyword">var</span> lbfgs = <span class="highlight-keyword">new</span> BroydenFletcherGoldfarbShanno(numberOfVariables: <span class="highlight-number">2</span>, function: f, gradient: g);

<span class="highlight-comment">// And then minimize the function:</span> 
<span class="highlight-keyword">double</span> minValue = lbfgs.Minimize();
<span class="highlight-keyword">double</span>[] solution = lbfgs.Solution;

<span class="highlight-comment">// The resultant minimum value should be -2, and the solution</span> 
<span class="highlight-comment">// vector should be { 1.0, 2.0 }. The answer can be checked on</span> 
<span class="highlight-comment">// Wolfram Alpha by clicking the following the link:</span> 

<span class="highlight-comment">// http://www.wolframalpha.com/input/?i=maximize+%28exp%28-%28x-1%29%C2%B2%29+%2B+exp%28-%28y-2%29%C2%B2%2F2%29%29</span></pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Suppose we would like to find the minimum of the function 
//  
//   f(x,y)  =  -exp{-(x-1)²} - exp{-(y-2)²/2} 
//  

// First we need write down the function either as a named 
// method, an anonymous method or as a lambda function:

Func&lt;double[], double&gt; f = (x) =&gt;
    -Math.Exp(-Math.Pow(x[0] - 1, 2)) - Math.Exp(-0.5 * Math.Pow(x[1] - 2, 2));

// Now, we need to write its gradient, which is just the 
// vector of first partial derivatives del_f / del_x, as: 
//  
//   g(x,y)  =  { del f / del x, del f / del y } 
// 

Func&lt;double[], double[]&gt; g = (x) =&gt; new double[] 
{
    // df/dx = {-2 e^(-    (x-1)^2) (x-1)} 
    2 * Math.Exp(-Math.Pow(x[0] - 1, 2)) * (x[0] - 1),

    // df/dy = {-  e^(-1/2 (y-2)^2) (y-2)}
    Math.Exp(-0.5 * Math.Pow(x[1] - 2, 2)) * (x[1] - 2)
};

// Finally, we can create the L-BFGS solver, passing the functions as arguments 
var lbfgs = new BroydenFletcherGoldfarbShanno(numberOfVariables: 2, function: f, gradient: g);

// And then minimize the function: 
double minValue = lbfgs.Minimize();
double[] solution = lbfgs.Solution;

// The resultant minimum value should be -2, and the solution 
// vector should be { 1.0, 2.0 }. The answer can be checked on 
// Wolfram Alpha by clicking the following the link: 

// http://www.wolframalpha.com/input/?i=maximize+%28exp%28-%28x-1%29%C2%B2%29+%2B+exp%28-%28y-2%29%C2%B2%2F2%29%29</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Math_Optimization_BroydenFletcherGoldfarbShanno.htm" target="">BroydenFletcherGoldfarbShanno Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Math_Optimization.htm" target="">Accord.Math.Optimization Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+BroydenFletcherGoldfarbShanno+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>