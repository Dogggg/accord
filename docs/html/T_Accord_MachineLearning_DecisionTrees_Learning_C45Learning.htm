<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>C45Learning Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="C45Learning class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.DecisionTrees.Learning.C45Learning class" />
    <meta name="System.Keywords" content="C45Learning class, about C45Learning class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.DecisionTrees.Learning.C45Learning" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.DecisionTrees.Learning.C45Learning" />
    <meta name="Description" content="C4.5 Learning algorithm for Decision Trees." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning.DecisionTrees.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_DecisionTrees_Learning_C45Learning" />
    <meta name="guid" content="T_Accord_MachineLearning_DecisionTrees_Learning_C45Learning" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">C45Learning Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               C4.5 Learning algorithm for <a href="T_Accord_MachineLearning_DecisionTrees_DecisionTree.htm" target="">Decision Trees</a>.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning.DecisionTrees.Learning<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>C45Learning</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning_DecisionTrees_Learning.htm" target="">Accord.MachineLearning.DecisionTrees.Learning</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.9.0.0 (2.9.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">C45Learning</span></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class C45Learning</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               References:
               <ul><li>
                   Quinlan, J. R. C4.5: Programs for Machine Learning. Morgan
                   Kaufmann Publishers, 1993.</li><li>
                   Quinlan, J. R. C4.5: Programs for Machine Learning. Morgan
                   Kaufmann Publishers, 1993.</li><li>
                   Quinlan, J. R. Improved use of continuous attributes in c4.5. Journal
                   of Artificial Intelligence Research, 4:77-90, 1996.</li><li>
                   Mitchell, T. M. Machine Learning. McGraw-Hill, 1997. pp. 55-58. </li><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://en.wikipedia.org/wiki/ID3_algorithm" target="_blank">
                   Wikipedia, the free enclyclopedia. ID3 algorithm. Available on 
                   http://en.wikipedia.org/wiki/ID3_algorithm </a></li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// This example uses the Nursery Database available from the Universiry of</span> 
<span class="highlight-comment">// California Irvine repository of machine learning databases, available at</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">//   http://archive.ics.uci.edu/ml/machine-learning-databases/nursery/nursery.names</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">// The description paragraph is listed as follows.</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">//   Nursery Database was derived from a hierarchical decision model</span> 
<span class="highlight-comment">//   originally developed to rank applications for nursery schools. It</span> 
<span class="highlight-comment">//   was used during several years in 1980's when there was excessive</span> 
<span class="highlight-comment">//   enrollment to these schools in Ljubljana, Slovenia, and the</span> 
<span class="highlight-comment">//   rejected applications frequently needed an objective</span> 
<span class="highlight-comment">//   explanation. The final decision depended on three subproblems:</span> 
<span class="highlight-comment">//   occupation of parents and child's nursery, family structure and</span> 
<span class="highlight-comment">//   financial standing, and social and health picture of the family.</span> 
<span class="highlight-comment">//   The model was developed within expert system shell for decision</span> 
<span class="highlight-comment">//   making DEX (M. Bohanec, V. Rajkovic: Expert system for decision</span> 
<span class="highlight-comment">//   making. Sistemica 1(1), pp. 145-157, 1990.).</span> 
<span class="highlight-comment">// </span> 

<span class="highlight-comment">// Let's begin by loading the raw data. This string variable contains</span> 
<span class="highlight-comment">// the contents of the nursery.data file as a single, continuous text.</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">string</span> nurseryData = Resources.nursery;

<span class="highlight-comment">// Those are the input columns available in the data</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">string</span>[] inputColumns = 
{
    <span class="highlight-literal">"parents"</span>, <span class="highlight-literal">"has_nurs"</span>, <span class="highlight-literal">"form"</span>, <span class="highlight-literal">"children"</span>,
    <span class="highlight-literal">"housing"</span>, <span class="highlight-literal">"finance"</span>, <span class="highlight-literal">"social"</span>, <span class="highlight-literal">"health"</span>
};

<span class="highlight-comment">// And this is the output, the last column of the data.</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">string</span> outputColumn = <span class="highlight-literal">"output"</span>;


<span class="highlight-comment">// Let's populate a datatable with this information.</span> 
<span class="highlight-comment">// </span>
DataTable table = <span class="highlight-keyword">new</span> DataTable(<span class="highlight-literal">"Nursery"</span>);
table.Columns.Add(inputColumns);
table.Columns.Add(outputColumn);

<span class="highlight-keyword">string</span>[] lines = nurseryData.Split(
    <span class="highlight-keyword">new</span>[] { Environment.NewLine }, StringSplitOptions.None);

<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> line <span class="highlight-keyword">in</span> lines)
    table.Rows.Add(line.Split(<span class="highlight-literal">','</span>));


<span class="highlight-comment">// Now, we have to convert the textual, categoric data found</span> 
<span class="highlight-comment">// in the table to a more manageable discrete representation.</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-comment">// For this, we will create a codebook to translate text to</span> 
<span class="highlight-comment">// discrete integer symbols:</span> 
<span class="highlight-comment">// </span>
Codification codebook = <span class="highlight-keyword">new</span> Codification(table);

<span class="highlight-comment">// And then convert all data into symbols</span> 
<span class="highlight-comment">// </span>
DataTable symbols = codebook.Apply(table);
<span class="highlight-keyword">double</span>[][] inputs = symbols.ToArray(inputColumns);
<span class="highlight-keyword">int</span>[] outputs = symbols.ToArray&lt;<span class="highlight-keyword">int</span>&gt;(outputColumn);

<span class="highlight-comment">// From now on, we can start creating the decision tree.</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">var</span> attributes = DecisionVariable.FromCodebook(codebook, inputColumns);
DecisionTree tree = <span class="highlight-keyword">new</span> DecisionTree(attributes, outputClasses: <span class="highlight-number">5</span>);


<span class="highlight-comment">// Now, let's create the C4.5 algorithm</span>
C45Learning c45 = <span class="highlight-keyword">new</span> C45Learning(tree);

<span class="highlight-comment">// and learn a decision tree. The value of</span> 
<span class="highlight-comment">//   the error variable below should be 0.</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">double</span> error = c45.Run(inputs, outputs);


<span class="highlight-comment">// To compute a decision for one of the input points,</span> 
<span class="highlight-comment">//   such as the 25-th example in the set, we can use</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">int</span> y = tree.Compute(inputs[<span class="highlight-number">25</span>]);

<span class="highlight-comment">// Finally, we can also convert our tree to a native</span> 
<span class="highlight-comment">// function, improving efficiency considerably, with</span> 
<span class="highlight-comment">// </span>
Func&lt;<span class="highlight-keyword">double</span>[], <span class="highlight-keyword">int</span>&gt; func = tree.ToExpression().Compile();

<span class="highlight-comment">// Again, to compute a new decision, we can just use</span> 
<span class="highlight-comment">// </span> 
<span class="highlight-keyword">int</span> z = func(inputs[<span class="highlight-number">25</span>]);</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// This example uses the Nursery Database available from the Universiry of 
// California Irvine repository of machine learning databases, available at 
//  
//   http://archive.ics.uci.edu/ml/machine-learning-databases/nursery/nursery.names 
//  
// The description paragraph is listed as follows. 
//  
//   Nursery Database was derived from a hierarchical decision model 
//   originally developed to rank applications for nursery schools. It 
//   was used during several years in 1980's when there was excessive 
//   enrollment to these schools in Ljubljana, Slovenia, and the 
//   rejected applications frequently needed an objective 
//   explanation. The final decision depended on three subproblems: 
//   occupation of parents and child's nursery, family structure and 
//   financial standing, and social and health picture of the family. 
//   The model was developed within expert system shell for decision 
//   making DEX (M. Bohanec, V. Rajkovic: Expert system for decision 
//   making. Sistemica 1(1), pp. 145-157, 1990.). 
//  

// Let's begin by loading the raw data. This string variable contains 
// the contents of the nursery.data file as a single, continuous text. 
//  
string nurseryData = Resources.nursery;

// Those are the input columns available in the data 
//  
string[] inputColumns = 
{
    "parents", "has_nurs", "form", "children",
    "housing", "finance", "social", "health"
};

// And this is the output, the last column of the data. 
//  
string outputColumn = "output";


// Let's populate a datatable with this information. 
// 
DataTable table = new DataTable("Nursery");
table.Columns.Add(inputColumns);
table.Columns.Add(outputColumn);

string[] lines = nurseryData.Split(
    new[] { Environment.NewLine }, StringSplitOptions.None);

foreach (var line in lines)
    table.Rows.Add(line.Split(','));


// Now, we have to convert the textual, categoric data found 
// in the table to a more manageable discrete representation. 
//  
// For this, we will create a codebook to translate text to 
// discrete integer symbols: 
// 
Codification codebook = new Codification(table);

// And then convert all data into symbols 
// 
DataTable symbols = codebook.Apply(table);
double[][] inputs = symbols.ToArray(inputColumns);
int[] outputs = symbols.ToArray&lt;int&gt;(outputColumn);

// From now on, we can start creating the decision tree. 
//  
var attributes = DecisionVariable.FromCodebook(codebook, inputColumns);
DecisionTree tree = new DecisionTree(attributes, outputClasses: 5);


// Now, let's create the C4.5 algorithm
C45Learning c45 = new C45Learning(tree);

// and learn a decision tree. The value of 
//   the error variable below should be 0. 
//  
double error = c45.Run(inputs, outputs);


// To compute a decision for one of the input points, 
//   such as the 25-th example in the set, we can use 
//  
int y = tree.Compute(inputs[25]);

// Finally, we can also convert our tree to a native 
// function, improving efficiency considerably, with 
// 
Func&lt;double[], int&gt; func = tree.ToExpression().Compile();

// Again, to compute a new decision, we can just use 
//  
int z = func(inputs[25]);</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_DecisionTrees_Learning_C45Learning.htm" target="">C45Learning Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_DecisionTrees_Learning.htm" target="">Accord.MachineLearning.DecisionTrees.Learning Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+C45Learning+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>