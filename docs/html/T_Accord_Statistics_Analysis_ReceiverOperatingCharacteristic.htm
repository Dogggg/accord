<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>ReceiverOperatingCharacteristic Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="ReceiverOperatingCharacteristic class" />
    <meta name="System.Keywords" content="Accord.Statistics.Analysis.ReceiverOperatingCharacteristic class" />
    <meta name="System.Keywords" content="ReceiverOperatingCharacteristic class, about ReceiverOperatingCharacteristic class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Analysis.ReceiverOperatingCharacteristic" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Analysis.ReceiverOperatingCharacteristic" />
    <meta name="Description" content="Receiver Operating Characteristic (ROC) Curve." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.Statistics.Analysis" />
    <meta name="file" content="T_Accord_Statistics_Analysis_ReceiverOperatingCharacteristic" />
    <meta name="guid" content="T_Accord_Statistics_Analysis_ReceiverOperatingCharacteristic" />
    
    <link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdLogoColumn">
              <img alt="Accord.NET (logo)" src="./../icons/logo.png" />
            </td>
            <td class="OH_tdTitleColumn">ReceiverOperatingCharacteristic Class</td>
            <td class="OH_tdRunningTitleColumn">Accord.NET Framework</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord-net.github.io/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
              Receiver Operating Characteristic (ROC) Curve.
            </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.Statistics.Analysis<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>ReceiverOperatingCharacteristic</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_Statistics_Analysis.htm" target="">Accord.Statistics.Analysis</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.Statistics</span> (in Accord.Statistics.dll) Version: 2.10.0.0 (2.10.0.4632)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ReceiverOperatingCharacteristic</span></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class ReceiverOperatingCharacteristic</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              In signal detection theory, a receiver operating characteristic (ROC), or simply
              ROC curve, is a graphical plot of the sensitivity vs. (1 − specificity) for a 
              binary classifier system as its discrimination threshold is varied. </p><p>
              This package does not attempt to fit a curve to the obtained points. It just
              computes the area under the ROC curve directly using the trapezoidal rule.</p><p>
              Also note that the curve construction algorithm uses the convention that a 
              higher test value represents a positive for a condition while computing
              sensitivity and specificity values.</p><p>
              References: 
              <ul><li>
                  Wikipedia, The Free Encyclopedia. Receiver Operating Characteristic. Available on:
                  http://en.wikipedia.org/wiki/Receiver_operating_characteristic </li><li>
                  Anaesthesist. The magnificent ROC. Available on:
                  http://www.anaesthetist.com/mnm/stats/roc/Findex.htm </li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
              The following example shows how to measure the accuracy
              of a binary classifier using a ROC curve.</p><div id="ID0ECCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ECCAAAAA_tabs"></div><div id="ID0ECCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ECCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ECCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ECCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// This example shows how to measure the accuracy of a </span> 
<span class="highlight-comment">// binary classifier using a ROC curve. For this example,</span> 
<span class="highlight-comment">// we will be creating a Support Vector Machine trained</span> 
<span class="highlight-comment">// on the following training instances:</span> 

<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">// Those are from class -1</span> 
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">4</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">5</span>, <span class="highlight-number">5</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">5</span>, <span class="highlight-number">5</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">6</span>, <span class="highlight-number">2</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> },

    <span class="highlight-comment">// Those are from class +1</span> 
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">4</span>, <span class="highlight-number">5</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">5</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">6</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">4</span>, <span class="highlight-number">7</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">6</span>, <span class="highlight-number">2</span>, <span class="highlight-number">9</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">1</span>, <span class="highlight-number">6</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">2</span>, <span class="highlight-number">9</span> },
};

<span class="highlight-keyword">int</span>[] outputs =
{
    <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-comment">// fist eight from class -1</span> 
    <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>, <span class="highlight-number">+1</span>  <span class="highlight-comment">// last eight from class +1</span>
};

<span class="highlight-comment">// Next, we create a linear Support Vector Machine with 4 inputs</span>
SupportVectorMachine machine = <span class="highlight-keyword">new</span> SupportVectorMachine(inputs: <span class="highlight-number">3</span>);

<span class="highlight-comment">// Create the sequential minimal optimization learning algorithm</span> 
<span class="highlight-keyword">var</span> smo = <span class="highlight-keyword">new</span> SequentialMinimalOptimization(machine, inputs, outputs);

<span class="highlight-comment">// We learn the machine</span> 
<span class="highlight-keyword">double</span> error = smo.Run();

<span class="highlight-comment">// And then extract its predicted labels</span> 
<span class="highlight-keyword">double</span>[] predicted = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[inputs.Length];
<span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; predicted.Length; i++)
    predicted[i] = machine.Compute(inputs[i]);

<span class="highlight-comment">// At this point, the output vector contains the labels which</span> 
<span class="highlight-comment">// should have been assigned by the machine, and the predicted</span> 
<span class="highlight-comment">// vector contains the labels which have been actually assigned.</span> 

<span class="highlight-comment">// Create a new ROC curve to assess the performance of the model</span> 
<span class="highlight-keyword">var</span> roc = <span class="highlight-keyword">new</span> ReceiverOperatingCharacteristic(outputs, predicted);
roc.Compute(<span class="highlight-number">100</span>); <span class="highlight-comment">// Compute a ROC curve with 100 cut-off points</span> 

<span class="highlight-comment">// Generate a connected scatterplot for the ROC curve and show it on-screen</span>
ScatterplotBox.Show(roc.GetScatterplot(includeRandom: <span class="highlight-keyword">true</span>), nonBlocking: <span class="highlight-keyword">true</span>)

    .SetSymbolSize(<span class="highlight-number">0</span>)      <span class="highlight-comment">// do not display data points</span>
    .SetLinesVisible(<span class="highlight-keyword">true</span>) <span class="highlight-comment">// show lines connecting points</span>
    .SetScaleTight(<span class="highlight-keyword">true</span>)   <span class="highlight-comment">// tighten the scale to points</span>
    .WaitForClose();</pre></div><div id="ID0ECCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// This example shows how to measure the accuracy of a  
// binary classifier using a ROC curve. For this example, 
// we will be creating a Support Vector Machine trained 
// on the following training instances: 

double[][] inputs =
{
    // Those are from class -1 
    new double[] { 2, 4, 0 },
    new double[] { 5, 5, 1 },
    new double[] { 4, 5, 0 },
    new double[] { 2, 5, 5 },
    new double[] { 4, 5, 1 },
    new double[] { 4, 5, 0 },
    new double[] { 6, 2, 0 },
    new double[] { 4, 1, 0 },

    // Those are from class +1 
    new double[] { 1, 4, 5 },
    new double[] { 7, 5, 1 },
    new double[] { 2, 6, 0 },
    new double[] { 7, 4, 7 },
    new double[] { 4, 5, 0 },
    new double[] { 6, 2, 9 },
    new double[] { 4, 1, 6 },
    new double[] { 7, 2, 9 },
};

int[] outputs =
{
    -1, -1, -1, -1, -1, -1, -1, -1, // fist eight from class -1 
    +1, +1, +1, +1, +1, +1, +1, +1  // last eight from class +1
};

// Next, we create a linear Support Vector Machine with 4 inputs
SupportVectorMachine machine = new SupportVectorMachine(inputs: 3);

// Create the sequential minimal optimization learning algorithm 
var smo = new SequentialMinimalOptimization(machine, inputs, outputs);

// We learn the machine 
double error = smo.Run();

// And then extract its predicted labels 
double[] predicted = new double[inputs.Length];
for (int i = 0; i &lt; predicted.Length; i++)
    predicted[i] = machine.Compute(inputs[i]);

// At this point, the output vector contains the labels which 
// should have been assigned by the machine, and the predicted 
// vector contains the labels which have been actually assigned. 

// Create a new ROC curve to assess the performance of the model 
var roc = new ReceiverOperatingCharacteristic(outputs, predicted);
roc.Compute(100); // Compute a ROC curve with 100 cut-off points 

// Generate a connected scatterplot for the ROC curve and show it on-screen
ScatterplotBox.Show(roc.GetScatterplot(includeRandom: true), nonBlocking: true)

    .SetSymbolSize(0)      // do not display data points
    .SetLinesVisible(true) // show lines connecting points
    .SetScaleTight(true)   // tighten the scale to points
    .WaitForClose();</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECCAAAAA');</script><p>
              The resulting graph is shown below.</p><img src="./../images/roc-curve.png" /><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_Statistics_Analysis_ReceiverOperatingCharacteristic.htm" target="">ReceiverOperatingCharacteristic Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Analysis.htm" target="">Accord.Statistics.Analysis Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord-net.github.io/" target="_blank">Accord.NET Framework</a> © 2009-2013. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+ReceiverOperatingCharacteristic+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>