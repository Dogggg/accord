<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../Styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../Styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../Scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>MultilabelSupportVectorMachine Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="MultilabelSupportVectorMachine class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.MultilabelSupportVectorMachine class" />
    <meta name="System.Keywords" content="MultilabelSupportVectorMachine class, about MultilabelSupportVectorMachine class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.MultilabelSupportVectorMachine" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.MultilabelSupportVectorMachine" />
    <meta name="Description" content="One-against-all Multi-label Kernel Support Vector Machine Classifier." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="Accord.MachineLearning.VectorMachines" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_MultilabelSupportVectorMachine" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_MultilabelSupportVectorMachine" />
    
    <link type="text/css" rel="stylesheet" href="./../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js">
      <!---->
    </script>
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <div class="OH_topic">
          <div class="OH_title">
            <table>
              <tr>
                <td class="OH_tdTitleColumn">MultilabelSupportVectorMachine Class</td>
                <td class="OH_tdLogoColumn">
                  <img align="right" src="./../icons/Accord.NET.png" />
                </td>
              </tr>
            </table>
          </div>
        </div>
        <div class="OH_feedbacklink">
          <a href="mailto:?subject=Accord.NET+Framework+MultilabelSupportVectorMachine+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a>
        </div>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle">
              <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
              <a href="http://accord.googlecode.com/svn/docs/Index.html" target="_top">Show table of contents (goes to the online documentation index).</a>
              <br />
            </span>
            <div class="summary">
               One-against-all Multi-label Kernel Support Vector Machine Classifier.
             </div>
            <div class="OH_CollapsibleAreaRegion">
              <div class="OH_regiontitle">Inheritance Hierarchy</div>
              <div class="OH_CollapsibleArea_HrDiv">
                <hr class="OH_CollapsibleArea_Hr" />
              </div>
            </div>
            <div class="OH_clear"></div>
            <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" />
            <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a>
            <br />  <span class="selflink">Accord.MachineLearning.VectorMachines<span id="ID0EBBOAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBOAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MultilabelSupportVectorMachine</span><br /><p></p><b>Namespace:</b> <a href="N_Accord_MachineLearning_VectorMachines.htm" target="">Accord.MachineLearning.VectorMachines</a><br /><b>Assembly:</b> <span sdata="assembly">Accord.MachineLearning</span> (in Accord.MachineLearning.dll) Version: 2.8.0.0 (2.8.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EAAEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAEAAAAA_tabimgleft"></div><div id="ID0EAAEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAEAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EAAEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAEAAAAA_tabimgright"></div></div><div id="ID0EAAEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAEAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EAAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAEAAAAA_copycode" href="javascript:CopyToClipboard('ID0EAAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAEAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EAAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MultilabelSupportVectorMachine</span> : <a href="T_Accord_MachineLearning_VectorMachines_ISupportVectorMachine.htm">ISupportVectorMachine</a>, 
	<a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a>&lt;<a href="T_Accord_MachineLearning_VectorMachines_KernelSupportVectorMachine.htm">KernelSupportVectorMachine</a>&gt;, <a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_blank">IEnumerable</a></pre></div><div id="ID0EAAEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[SerializableAttribute]
public class MultilabelSupportVectorMachine : ISupportVectorMachine, 
	IEnumerable&lt;KernelSupportVectorMachine&gt;, IEnumerable</pre></div><div id="ID0EAAEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAEAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>
               The Support Vector Machine is by nature a binary classifier. Multiple label
               problems are problems in which an input sample is allowed to belong to one
               or more classes. A way to implement multi-label classes in support vector
               machines is to build a one-against-all decision scheme where multiple SVMs
               are trained to detect each of the available classes. </p><p>
               Currently this class supports only Kernel machines as the underlying classifiers.
               If a Linear Support Vector Machine is needed, specify a Linear kernel in the
               constructor at the moment of creation. </p><p>
               References:
               <ul><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://courses.media.mit.edu/2006fall/mas622j/Projects/aisen-project/index.html" target="_blank">
                    http://courses.media.mit.edu/2006fall/mas622j/Projects/aisen-project/index.html </a></li><li><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://nlp.stanford.edu/IR-book/html/htmledition/multiclass-svms-1.html" target="_blank">
                    http://nlp.stanford.edu/IR-book/html/htmledition/multiclass-svms-1.html </a></li></ul></p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">// Sample data</span> 
<span class="highlight-comment">//   The following is simple auto association function</span> 
<span class="highlight-comment">//   where each input correspond to its own class. This</span> 
<span class="highlight-comment">//   problem should be easily solved by a Linear kernel.</span> 

<span class="highlight-comment">// Sample input data</span> 
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">3</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span> },
};

<span class="highlight-comment">// Outputs for each of the inputs</span> 
<span class="highlight-keyword">int</span>[][] outputs =
{
    <span class="highlight-keyword">new</span>[] { <span class="highlight-number">-1</span>,  <span class="highlight-number">1</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>,  <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">1</span>, <span class="highlight-number">-1</span> },
    <span class="highlight-keyword">new</span>[] { <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span>, <span class="highlight-number">-1</span> },
};


<span class="highlight-comment">// Create a new Linear kernel</span>
IKernel kernel = <span class="highlight-keyword">new</span> Linear();

<span class="highlight-comment">// Create a new Multi-class Support Vector Machine with one input,</span> 
<span class="highlight-comment">//  using the linear kernel and for four disjoint classes.</span> 
<span class="highlight-keyword">var</span> machine = <span class="highlight-keyword">new</span> MultilabelSupportVectorMachine(<span class="highlight-number">1</span>, kernel, <span class="highlight-number">3</span>);

<span class="highlight-comment">// Create the Multi-label learning algorithm for the machine</span> 
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MultilabelSupportVectorLearning(machine, inputs, outputs);

<span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span> 
<span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
teacher.Algorithm = (svm, classInputs, classOutputs, i, j) =&gt;
    <span class="highlight-keyword">new</span> SequentialMinimalOptimization(svm, classInputs, classOutputs);

<span class="highlight-comment">// Run the learning algorithm</span> 
<span class="highlight-keyword">double</span> error = teacher.Run();</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>// Sample data 
//   The following is simple auto association function 
//   where each input correspond to its own class. This 
//   problem should be easily solved by a Linear kernel. 

// Sample input data 
double[][] inputs =
{
    new double[] { 0 },
    new double[] { 3 },
    new double[] { 1 },
    new double[] { 2 },
};

// Outputs for each of the inputs 
int[][] outputs =
{
    new[] { -1,  1, -1 },
    new[] { -1, -1,  1 },
    new[] {  1,  1, -1 },
    new[] { -1, -1, -1 },
};


// Create a new Linear kernel
IKernel kernel = new Linear();

// Create a new Multi-class Support Vector Machine with one input, 
//  using the linear kernel and for four disjoint classes. 
var machine = new MultilabelSupportVectorMachine(1, kernel, 3);

// Create the Multi-label learning algorithm for the machine 
var teacher = new MultilabelSupportVectorLearning(machine, inputs, outputs);

// Configure the learning algorithm to use SMO to train the 
//  underlying SVMs in each of the binary class subproblems.
teacher.Algorithm = (svm, classInputs, classOutputs, i, j) =&gt;
    new SequentialMinimalOptimization(svm, classInputs, classOutputs);

// Run the learning algorithm 
double error = teacher.Run();</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="AllMembers_T_Accord_MachineLearning_VectorMachines_MultilabelSupportVectorMachine.htm" target="">MultilabelSupportVectorMachine Members</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines.htm" target="">Accord.MachineLearning.VectorMachines Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_MultilabelSupportVectorLearning.htm" target="">Accord.MachineLearning.VectorMachines.Learning<span id="ID0EBAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAAAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MultilabelSupportVectorLearning</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p>
        <a href="http://accord.googlecode.com" target="_blank">Accord.NET Framework</a> © 2009-2012. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=Accord.NET+Framework+MultilabelSupportVectorMachine+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>